[('G:\\AI\\GameFramework-master\\GameFramework\\Base\\GameFrameworkEntry.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'GameFrameworkLinkedList'},
    'class_fields': [('s_GameFrameworkModules',
                      'GameFrameworkLinkedList<GameFrameworkModule>')],
    'class_method_calls': [('Utility.Marshal', 'FreeCachedHGlobal'),
                           ('Utility.Text', 'Format'),
                           ('Type', 'GetType')],
    'class_methods': {'GetModule', 'Update', 'Shutdown'},
    'class_name': 'GameFrameworkEntry',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\GameFrameworkEventArgs.cs',
  [{'class_dependencies': {'IReference', 'EventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Clear'},
    'class_name': 'GameFrameworkEventArgs',
    'class_parent': ['EventArgs', 'IReference'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\GameFrameworkException.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'GameFrameworkException',
    'class_parent': ['Exception'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\GameFrameworkLinkedList.cs',
  [{'class_dependencies': {'ICollection',
                           'IEnumerable',
                           'LinkedList',
                           'LinkedListNode',
                           'LinkedListNode<T>'},
    'class_fields': [('m_LinkedList', 'LinkedList<T>'),
                     ('m_CachedNodes', 'Queue<LinkedListNode<T>>')],
    'class_method_calls': [],
    'class_methods': {'AddAfter',
                      'AddBefore',
                      'AddFirst',
                      'AddLast',
                      'Clear',
                      'ClearCachedNodes',
                      'Contains',
                      'CopyTo',
                      'Find',
                      'FindLast',
                      'GetEnumerator',
                      'Remove',
                      'RemoveFirst',
                      'RemoveLast'},
    'class_name': 'GameFrameworkLinkedList',
    'class_parent': ['ICollection', 'IEnumerable'],
    'class_properties': [('Count', 'int'),
                         ('CachedNodeCount', 'int'),
                         ('First', 'LinkedListNode<T>'),
                         ('Last', 'LinkedListNode<T>'),
                         ('IsReadOnly', 'bool'),
                         ('SyncRoot', 'object'),
                         ('IsSynchronized', 'bool')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\GameFrameworkModule.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'GameFrameworkModule',
    'class_parent': [],
    'class_properties': [('Priority', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\GameFrameworkMultiDictionary.cs',
  [{'class_dependencies': {'GameFrameworkLinkedList',
                           'IEnumerable',
                           'TKey',
                           'TValue'},
    'class_fields': [('m_LinkedList', 'GameFrameworkLinkedList<TValue>'),
                     ('m_Dictionary',
                      'Dictionary<TKey, '
                      'GameFrameworkLinkedListRange<TValue>>')],
    'class_method_calls': [],
    'class_methods': {'Add',
                      'Clear',
                      'Contains',
                      'GetEnumerator',
                      'Remove',
                      'RemoveAll',
                      'TryGetValue'},
    'class_name': 'GameFrameworkMultiDictionary',
    'class_parent': ['IEnumerable'],
    'class_properties': [('Count', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\GameFrameworkSerializer.cs',
  [{'class_dependencies': {'DeserializeCallback',
                           'SerializeCallback',
                           'TryGetValueCallback'},
    'class_fields': [('m_SerializeCallbacks',
                      'Dictionary<byte, SerializeCallback>'),
                     ('m_DeserializeCallbacks',
                      'Dictionary<byte, DeserializeCallback>'),
                     ('m_TryGetValueCallbacks',
                      'Dictionary<byte, TryGetValueCallback>'),
                     ('m_LatestSerializeCallbackVersion', 'byte')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'Deserialize',
                      'RegisterDeserializeCallback',
                      'RegisterSerializeCallback',
                      'RegisterTryGetValueCallback',
                      'Serialize',
                      'TryGetValue'},
    'class_name': 'GameFrameworkSerializer',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Config\\ConfigManager.ConfigData.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IConfigManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ConfigManager',
    'class_parent': ['GameFrameworkModule', 'IConfigManager'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Config\\ConfigManager.cs',
  [{'class_dependencies': {'ConfigData',
                           'DataProvider',
                           'GameFrameworkModule',
                           'IConfigHelper',
                           'IConfigManager'},
    'class_fields': [('m_ConfigDatas', 'Dictionary<string, ConfigData>'),
                     ('m_DataProvider', 'DataProvider<IConfigManager>'),
                     ('m_ConfigHelper', 'IConfigHelper')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'AddConfig',
                      'EnsureCachedBytesSize',
                      'FreeCachedBytes',
                      'GetBool',
                      'GetFloat',
                      'GetInt',
                      'GetString',
                      'HasConfig',
                      'ParseData',
                      'ReadData',
                      'RemoveAllConfigs',
                      'RemoveConfig',
                      'SetConfigHelper',
                      'SetDataProviderHelper',
                      'SetResourceManager'},
    'class_name': 'ConfigManager',
    'class_parent': ['GameFrameworkModule', 'IConfigManager'],
    'class_properties': [('Count', 'int'), ('CachedBytesSize', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\DataNode\\DataNodeManager.cs',
  [{'class_dependencies': {'DataNode',
                           'GameFrameworkModule',
                           'IDataNode',
                           'IDataNodeManager'},
    'class_fields': [('EmptyStringArray', 'string'),
                     ('PathSplitSeparator', 'string'),
                     ('RootName', 'string'),
                     ('m_Root', 'DataNode')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'Clear',
                      'GetData',
                      'GetNode',
                      'GetOrAddNode',
                      'RemoveNode',
                      'SetData'},
    'class_name': 'DataNodeManager',
    'class_parent': ['GameFrameworkModule', 'IDataNodeManager'],
    'class_properties': [('Root', 'IDataNode')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\DataNode\\DataNodeManager.DataNode.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IDataNodeManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'DataNodeManager',
    'class_parent': ['GameFrameworkModule', 'IDataNodeManager'],
    'class_properties': []},
   {'class_dependencies': {'DataNode',
                           'IDataNode',
                           'IDataNode[]',
                           'IReference'},
    'class_fields': [('EmptyDataNodeArray', 'DataNode'),
                     ('m_Name', 'string'),
                     ('m_Data', 'Variable'),
                     ('m_Parent', 'DataNode'),
                     ('m_Childs', 'List<DataNode>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'Clear',
                      'Create',
                      'GetAllChild',
                      'GetChild',
                      'GetData',
                      'GetOrAddChild',
                      'HasChild',
                      'RemoveChild',
                      'SetData',
                      'ToDataString',
                      'ToString'},
    'class_name': 'DataNode',
    'class_parent': ['IDataNode', 'IReference'],
    'class_properties': [('Name', 'string'),
                         ('FullName', 'string'),
                         ('Parent', 'IDataNode'),
                         ('ChildCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\DataTable\\DataTableBase.cs',
  [{'class_dependencies': {'DataTableBase', 'DataProvider'},
    'class_fields': [('m_Name', 'string'),
                     ('m_DataProvider', 'DataProvider<DataTableBase>')],
    'class_method_calls': [],
    'class_methods': {'AddDataRow',
                      'HasDataRow',
                      'ParseData',
                      'ReadData',
                      'RemoveAllDataRows',
                      'RemoveDataRow'},
    'class_name': 'DataTableBase',
    'class_parent': [],
    'class_properties': [('Name', 'string'),
                         ('FullName', 'string'),
                         ('Type', 'Type'),
                         ('Count', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\DataTable\\DataTableManager.cs',
  [{'class_dependencies': {'DataTableBase',
                           'DataTableBase[]',
                           'GameFrameworkModule',
                           'IDataProviderHelper',
                           'IDataTable<T>',
                           'IDataTableHelper',
                           'IDataTableManager',
                           'IResourceManager',
                           'TypeNamePair'},
    'class_fields': [('m_DataTables',
                      'Dictionary<TypeNamePair, DataTableBase>'),
                     ('m_ResourceManager', 'IResourceManager'),
                     ('m_DataProviderHelper',
                      'IDataProviderHelper<DataTableBase>'),
                     ('m_DataTableHelper', 'IDataTableHelper')],
    'class_method_calls': [('Utility.Text', 'Format'),
                           ('Activator', 'CreateInstance')],
    'class_methods': {'CreateDataTable',
                      'DestroyDataTable',
                      'EnsureCachedBytesSize',
                      'FreeCachedBytes',
                      'GetAllDataTables',
                      'GetDataTable',
                      'HasDataTable',
                      'SetDataProviderHelper',
                      'SetDataTableHelper',
                      'SetResourceManager'},
    'class_name': 'DataTableManager',
    'class_parent': ['GameFrameworkModule', 'IDataTableManager'],
    'class_properties': [('Count', 'int'), ('CachedBytesSize', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\DataTable\\DataTableManager.DataTable.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IDataTableManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'DataTableManager',
    'class_parent': ['GameFrameworkModule', 'IDataTableManager'],
    'class_properties': []},
   {'class_dependencies': {'DataTableBase', 'IEnumerator<T>'},
    'class_fields': [('m_DataSet', 'Dictionary<int, T>'),
                     ('m_MinIdDataRow', 'T'),
                     ('m_MaxIdDataRow', 'T')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'AddDataRow',
                      'GetAllDataRows',
                      'GetDataRow',
                      'GetDataRows',
                      'GetEnumerator',
                      'HasDataRow',
                      'RemoveAllDataRows',
                      'RemoveDataRow'},
    'class_name': 'DataTable',
    'class_parent': ['DataTableBase'],
    'class_properties': [('Type', 'Type'),
                         ('Count', 'int'),
                         ('MinIdDataRow', 'T'),
                         ('MaxIdDataRow', 'T')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Debugger\\DebuggerManager.cs',
  [{'class_dependencies': {'DebuggerWindowGroup',
                           'GameFrameworkModule',
                           'IDebuggerManager',
                           'IDebuggerWindow',
                           'IDebuggerWindowGroup'},
    'class_fields': [('m_DebuggerWindowRoot', 'DebuggerWindowGroup'),
                     ('m_ActiveWindow', 'bool')],
    'class_method_calls': [],
    'class_methods': {'GetDebuggerWindow',
                      'RegisterDebuggerWindow',
                      'SelectDebuggerWindow',
                      'UnregisterDebuggerWindow'},
    'class_name': 'DebuggerManager',
    'class_parent': ['GameFrameworkModule', 'IDebuggerManager'],
    'class_properties': [('Priority', 'int'),
                         ('ActiveWindow', 'bool'),
                         ('DebuggerWindowRoot', 'IDebuggerWindowGroup')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Debugger\\DebuggerManager.DebuggerWindowGroup.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IDebuggerManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'DebuggerManager',
    'class_parent': ['GameFrameworkModule', 'IDebuggerManager'],
    'class_properties': []},
   {'class_dependencies': {'IDebuggerWindow',
                           'IDebuggerWindowGroup',
                           'string[]'},
    'class_fields': [('m_DebuggerWindows',
                      'List<KeyValuePair<string, IDebuggerWindow>>'),
                     ('m_SelectedIndex', 'int'),
                     ('m_DebuggerWindowNames', 'string')],
    'class_method_calls': [],
    'class_methods': {'GetDebuggerWindow',
                      'GetDebuggerWindowNames',
                      'Initialize',
                      'OnDraw',
                      'OnEnter',
                      'OnLeave',
                      'OnUpdate',
                      'RegisterDebuggerWindow',
                      'SelectDebuggerWindow',
                      'Shutdown',
                      'UnregisterDebuggerWindow'},
    'class_name': 'DebuggerWindowGroup',
    'class_parent': ['IDebuggerWindowGroup'],
    'class_properties': [('DebuggerWindowCount', 'int'),
                         ('SelectedIndex', 'int'),
                         ('SelectedWindow', 'IDebuggerWindow')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\Constant.cs',
  [{'class_dependencies': set(),
    'class_fields': [('DefaultPriority', 'int')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Constant',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadAgentHelperCompleteEventArgs.cs',
  [{'class_dependencies': {'DownloadAgentHelperCompleteEventArgs',
                           'GameFrameworkEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'DownloadAgentHelperCompleteEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Length', 'long')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadAgentHelperErrorEventArgs.cs',
  [{'class_dependencies': {'DownloadAgentHelperErrorEventArgs',
                           'GameFrameworkEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'DownloadAgentHelperErrorEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('DeleteDownloading', 'bool'),
                         ('ErrorMessage', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadAgentHelperUpdateBytesEventArgs.cs',
  [{'class_dependencies': {'DownloadAgentHelperUpdateBytesEventArgs',
                           'GameFrameworkEventArgs',
                           'byte[]'},
    'class_fields': [('m_Bytes', 'byte')],
    'class_method_calls': [],
    'class_methods': {'Create', 'GetBytes', 'Clear'},
    'class_name': 'DownloadAgentHelperUpdateBytesEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Offset', 'int'), ('Length', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadAgentHelperUpdateLengthEventArgs.cs',
  [{'class_dependencies': {'DownloadAgentHelperUpdateLengthEventArgs',
                           'GameFrameworkEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'DownloadAgentHelperUpdateLengthEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('DeltaLength', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadFailureEventArgs.cs',
  [{'class_dependencies': {'DownloadFailureEventArgs',
                           'GameFrameworkEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'DownloadFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('DownloadPath', 'string'),
                         ('DownloadUri', 'string'),
                         ('ErrorMessage', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadManager.cs',
  [{'class_dependencies': {'DownloadCounter',
                           'DownloadFailureEventArgs',
                           'DownloadStartEventArgs',
                           'DownloadSuccessEventArgs',
                           'DownloadTask',
                           'DownloadUpdateEventArgs',
                           'EventHandler',
                           'GameFrameworkModule',
                           'IDownloadManager',
                           'TaskInfo',
                           'TaskInfo[]',
                           'TaskPool'},
    'class_fields': [('OneMegaBytes', 'int'),
                     ('m_TaskPool', 'TaskPool<DownloadTask>'),
                     ('m_DownloadCounter', 'DownloadCounter'),
                     ('m_FlushSize', 'int'),
                     ('m_Timeout', 'float'),
                     ('m_DownloadStartEventHandler',
                      'EventHandler<DownloadStartEventArgs>'),
                     ('m_DownloadUpdateEventHandler',
                      'EventHandler<DownloadUpdateEventArgs>'),
                     ('m_DownloadSuccessEventHandler',
                      'EventHandler<DownloadSuccessEventArgs>'),
                     ('m_DownloadFailureEventHandler',
                      'EventHandler<DownloadFailureEventArgs>')],
    'class_method_calls': [],
    'class_methods': {'AddDownload',
                      'AddDownloadAgentHelper',
                      'GetAllDownloadInfos',
                      'GetDownloadInfo',
                      'GetDownloadInfos',
                      'RemoveAllDownloads',
                      'RemoveDownload',
                      'RemoveDownloads'},
    'class_name': 'DownloadManager',
    'class_parent': ['GameFrameworkModule', 'IDownloadManager'],
    'class_properties': [('Priority', 'int'),
                         ('Paused', 'bool'),
                         ('TotalAgentCount', 'int'),
                         ('FreeAgentCount', 'int'),
                         ('WorkingAgentCount', 'int'),
                         ('WaitingTaskCount', 'int'),
                         ('FlushSize', 'int'),
                         ('Timeout', 'float'),
                         ('CurrentSpeed', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadManager.DownloadAgent.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IDownloadManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'DownloadManager',
    'class_parent': ['GameFrameworkModule', 'IDownloadManager'],
    'class_properties': []},
   {'class_dependencies': {'DownloadAgent',
                           'DownloadTask',
                           'FileStream',
                           'GameFrameworkAction',
                           'IDisposable',
                           'IDownloadAgentHelper',
                           'StartTaskStatus'},
    'class_fields': [('m_Helper', 'IDownloadAgentHelper'),
                     ('m_Task', 'DownloadTask'),
                     ('m_FileStream', 'FileStream'),
                     ('m_WaitFlushSize', 'int'),
                     ('m_WaitTime', 'float'),
                     ('m_StartLength', 'long'),
                     ('m_DownloadedLength', 'long'),
                     ('m_SavedLength', 'long'),
                     ('m_Disposed', 'bool'),
                     ('DownloadAgentStart',
                      'GameFrameworkAction<DownloadAgent>'),
                     ('DownloadAgentUpdate',
                      'GameFrameworkAction<DownloadAgent, int>'),
                     ('DownloadAgentSuccess',
                      'GameFrameworkAction<DownloadAgent, long>'),
                     ('DownloadAgentFailure',
                      'GameFrameworkAction<DownloadAgent, string>')],
    'class_method_calls': [('Utility.Text', 'Format'),
                           ('File', 'Exists'),
                           ('File', 'OpenWrite'),
                           ('Path', 'GetDirectoryName'),
                           ('Directory', 'CreateDirectory')],
    'class_methods': {'Dispose',
                      'Initialize',
                      'Reset',
                      'Shutdown',
                      'Start',
                      'Update'},
    'class_name': 'DownloadAgent',
    'class_parent': ['IDisposable'],
    'class_properties': [('Task', 'DownloadTask'),
                         ('WaitTime', 'float'),
                         ('StartLength', 'long'),
                         ('DownloadedLength', 'long'),
                         ('CurrentLength', 'long'),
                         ('SavedLength', 'long')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadManager.DownloadCounter.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IDownloadManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'DownloadManager',
    'class_parent': ['GameFrameworkModule', 'IDownloadManager'],
    'class_properties': []},
   {'class_dependencies': {'DownloadCounterNode', 'GameFrameworkLinkedList'},
    'class_fields': [('m_DownloadCounterNodes',
                      'GameFrameworkLinkedList<DownloadCounterNode>'),
                     ('m_UpdateInterval', 'float'),
                     ('m_RecordInterval', 'float'),
                     ('m_CurrentSpeed', 'float'),
                     ('m_Accumulator', 'float'),
                     ('m_TimeLeft', 'float')],
    'class_method_calls': [],
    'class_methods': {'RecordDeltaLength', 'Update', 'Shutdown'},
    'class_name': 'DownloadCounter',
    'class_parent': [],
    'class_properties': [('UpdateInterval', 'float'),
                         ('RecordInterval', 'float'),
                         ('CurrentSpeed', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadManager.DownloadCounter.DownloadCounterNode.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IDownloadManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'DownloadManager',
    'class_parent': ['GameFrameworkModule', 'IDownloadManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'DownloadCounter',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'IReference', 'DownloadCounterNode'},
    'class_fields': [('m_DeltaLength', 'long'), ('m_ElapseSeconds', 'float')],
    'class_method_calls': [],
    'class_methods': {'Update', 'Create', 'AddDeltaLength', 'Clear'},
    'class_name': 'DownloadCounterNode',
    'class_parent': ['IReference'],
    'class_properties': [('DeltaLength', 'long'),
                         ('ElapseSeconds', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadManager.DownloadTask.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IDownloadManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'DownloadManager',
    'class_parent': ['GameFrameworkModule', 'IDownloadManager'],
    'class_properties': []},
   {'class_dependencies': {'TaskBase', 'DownloadTaskStatus', 'DownloadTask'},
    'class_fields': [('s_Serial', 'int'),
                     ('m_Status', 'DownloadTaskStatus'),
                     ('m_DownloadPath', 'string'),
                     ('m_DownloadUri', 'string'),
                     ('m_FlushSize', 'int'),
                     ('m_Timeout', 'float')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'DownloadTask',
    'class_parent': ['TaskBase'],
    'class_properties': [('Status', 'DownloadTaskStatus'),
                         ('DownloadPath', 'string'),
                         ('DownloadUri', 'string'),
                         ('FlushSize', 'int'),
                         ('Timeout', 'float'),
                         ('Description', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadManager.DownloadTaskStatus.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IDownloadManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'DownloadManager',
    'class_parent': ['GameFrameworkModule', 'IDownloadManager'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadStartEventArgs.cs',
  [{'class_dependencies': {'DownloadStartEventArgs', 'GameFrameworkEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'DownloadStartEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('DownloadPath', 'string'),
                         ('DownloadUri', 'string'),
                         ('CurrentLength', 'long'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadSuccessEventArgs.cs',
  [{'class_dependencies': {'DownloadSuccessEventArgs',
                           'GameFrameworkEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'DownloadSuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('DownloadPath', 'string'),
                         ('DownloadUri', 'string'),
                         ('CurrentLength', 'long'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Download\\DownloadUpdateEventArgs.cs',
  [{'class_dependencies': {'DownloadUpdateEventArgs', 'GameFrameworkEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'DownloadUpdateEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('DownloadPath', 'string'),
                         ('DownloadUri', 'string'),
                         ('CurrentLength', 'long'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\EntityManager.cs',
  [{'class_dependencies': {'EntityGroup',
                           'EntityInfo',
                           'EventHandler',
                           'GameFrameworkModule',
                           'HashSet',
                           'HideEntityCompleteEventArgs',
                           'IEntity',
                           'IEntityGroup',
                           'IEntityGroup[]',
                           'IEntityHelper',
                           'IEntityManager',
                           'IEntity[]',
                           'IObjectPoolManager',
                           'IResourceManager',
                           'LoadAssetCallbacks',
                           'ShowEntityDependencyAssetEventArgs',
                           'ShowEntityFailureEventArgs',
                           'ShowEntitySuccessEventArgs',
                           'ShowEntityUpdateEventArgs',
                           'int[]'},
    'class_fields': [('m_EntityInfos', 'Dictionary<int, EntityInfo>'),
                     ('m_EntityGroups', 'Dictionary<string, EntityGroup>'),
                     ('m_EntitiesBeingLoaded', 'Dictionary<int, int>'),
                     ('m_EntitiesToReleaseOnLoad', 'HashSet<int>'),
                     ('m_RecycleQueue', 'Queue<EntityInfo>'),
                     ('m_LoadAssetCallbacks', 'LoadAssetCallbacks'),
                     ('m_ObjectPoolManager', 'IObjectPoolManager'),
                     ('m_ResourceManager', 'IResourceManager'),
                     ('m_EntityHelper', 'IEntityHelper'),
                     ('m_Serial', 'int'),
                     ('m_IsShutdown', 'bool'),
                     ('m_ShowEntitySuccessEventHandler',
                      'EventHandler<ShowEntitySuccessEventArgs>'),
                     ('m_ShowEntityFailureEventHandler',
                      'EventHandler<ShowEntityFailureEventArgs>'),
                     ('m_ShowEntityUpdateEventHandler',
                      'EventHandler<ShowEntityUpdateEventArgs>'),
                     ('m_ShowEntityDependencyAssetEventHandler',
                      'EventHandler<ShowEntityDependencyAssetEventArgs>'),
                     ('m_HideEntityCompleteEventHandler',
                      'EventHandler<HideEntityCompleteEventArgs>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'AddEntityGroup',
                      'AttachEntity',
                      'DetachChildEntities',
                      'DetachEntity',
                      'GetAllEntityGroups',
                      'GetAllLoadedEntities',
                      'GetAllLoadingEntityIds',
                      'GetChildEntities',
                      'GetChildEntity',
                      'GetChildEntityCount',
                      'GetEntities',
                      'GetEntity',
                      'GetEntityGroup',
                      'GetParentEntity',
                      'HasEntity',
                      'HasEntityGroup',
                      'HideAllLoadedEntities',
                      'HideAllLoadingEntities',
                      'HideEntity',
                      'IsLoadingEntity',
                      'IsValidEntity',
                      'SetEntityHelper',
                      'SetObjectPoolManager',
                      'SetResourceManager',
                      'ShowEntity'},
    'class_name': 'EntityManager',
    'class_parent': ['GameFrameworkModule', 'IEntityManager'],
    'class_properties': [('EntityCount', 'int'),
                         ('EntityGroupCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\EntityManager.EntityGroup.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IEntityManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'EntityManager',
    'class_parent': ['GameFrameworkModule', 'IEntityManager'],
    'class_properties': []},
   {'class_dependencies': {'EntityInstanceObject',
                           'GameFrameworkLinkedList',
                           'IEntity',
                           'IEntityGroup',
                           'IEntityGroupHelper',
                           'IEntity[]',
                           'IObjectPool',
                           'LinkedListNode'},
    'class_fields': [('m_Name', 'string'),
                     ('m_EntityGroupHelper', 'IEntityGroupHelper'),
                     ('m_InstancePool', 'IObjectPool<EntityInstanceObject>'),
                     ('m_Entities', 'GameFrameworkLinkedList<IEntity>'),
                     ('m_CachedNode', 'LinkedListNode<IEntity>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'AddEntity',
                      'GetAllEntities',
                      'GetEntities',
                      'GetEntity',
                      'HasEntity',
                      'RegisterEntityInstanceObject',
                      'RemoveEntity',
                      'SetEntityInstanceLocked',
                      'SetEntityInstancePriority',
                      'SpawnEntityInstanceObject',
                      'UnspawnEntity',
                      'Update'},
    'class_name': 'EntityGroup',
    'class_parent': ['IEntityGroup'],
    'class_properties': [('Name', 'string'),
                         ('EntityCount', 'int'),
                         ('InstanceAutoReleaseInterval', 'float'),
                         ('InstanceCapacity', 'int'),
                         ('InstanceExpireTime', 'float'),
                         ('InstancePriority', 'int'),
                         ('Helper', 'IEntityGroupHelper')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\EntityManager.EntityInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IEntityManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'EntityManager',
    'class_parent': ['GameFrameworkModule', 'IEntityManager'],
    'class_properties': []},
   {'class_dependencies': {'EntityInfo',
                           'EntityStatus',
                           'IEntity',
                           'IEntity[]',
                           'IReference'},
    'class_fields': [('m_Entity', 'IEntity'),
                     ('m_Status', 'EntityStatus'),
                     ('m_ParentEntity', 'IEntity'),
                     ('m_ChildEntities', 'List<IEntity>')],
    'class_method_calls': [],
    'class_methods': {'AddChildEntity',
                      'Clear',
                      'Create',
                      'GetChildEntities',
                      'GetChildEntity',
                      'RemoveChildEntity'},
    'class_name': 'EntityInfo',
    'class_parent': ['IReference'],
    'class_properties': [('Entity', 'IEntity'),
                         ('Status', 'EntityStatus'),
                         ('ParentEntity', 'IEntity'),
                         ('ChildEntityCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\EntityManager.EntityInstanceObject.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IEntityManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'EntityManager',
    'class_parent': ['GameFrameworkModule', 'IEntityManager'],
    'class_properties': []},
   {'class_dependencies': {'EntityInstanceObject',
                           'IEntityHelper',
                           'ObjectBase'},
    'class_fields': [('m_EntityAsset', 'object'),
                     ('m_EntityHelper', 'IEntityHelper')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'EntityInstanceObject',
    'class_parent': ['ObjectBase'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\EntityManager.EntityStatus.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IEntityManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'EntityManager',
    'class_parent': ['GameFrameworkModule', 'IEntityManager'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\EntityManager.ShowEntityInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IEntityManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'EntityManager',
    'class_parent': ['GameFrameworkModule', 'IEntityManager'],
    'class_properties': []},
   {'class_dependencies': {'EntityGroup', 'IReference', 'ShowEntityInfo'},
    'class_fields': [('m_SerialId', 'int'),
                     ('m_EntityId', 'int'),
                     ('m_EntityGroup', 'EntityGroup'),
                     ('m_UserData', 'object')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ShowEntityInfo',
    'class_parent': ['IReference'],
    'class_properties': [('SerialId', 'int'),
                         ('EntityId', 'int'),
                         ('EntityGroup', 'EntityGroup'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\HideEntityCompleteEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'HideEntityCompleteEventArgs',
                           'IEntityGroup'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'HideEntityCompleteEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('EntityId', 'int'),
                         ('EntityAssetName', 'string'),
                         ('EntityGroup', 'IEntityGroup'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\ShowEntityDependencyAssetEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ShowEntityDependencyAssetEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ShowEntityDependencyAssetEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('EntityId', 'int'),
                         ('EntityAssetName', 'string'),
                         ('EntityGroupName', 'string'),
                         ('DependencyAssetName', 'string'),
                         ('LoadedCount', 'int'),
                         ('TotalCount', 'int'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\ShowEntityFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ShowEntityFailureEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ShowEntityFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('EntityId', 'int'),
                         ('EntityAssetName', 'string'),
                         ('EntityGroupName', 'string'),
                         ('ErrorMessage', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\ShowEntitySuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'IEntity',
                           'ShowEntitySuccessEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ShowEntitySuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Entity', 'IEntity'),
                         ('Duration', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Entity\\ShowEntityUpdateEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ShowEntityUpdateEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ShowEntityUpdateEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('EntityId', 'int'),
                         ('EntityAssetName', 'string'),
                         ('EntityGroupName', 'string'),
                         ('Progress', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Event\\EventManager.cs',
  [{'class_dependencies': {'EventPool',
                           'GameEventArgs',
                           'GameFrameworkModule',
                           'IEventManager'},
    'class_fields': [('m_EventPool', 'EventPool<GameEventArgs>')],
    'class_method_calls': [],
    'class_methods': {'Check',
                      'Count',
                      'Fire',
                      'FireNow',
                      'SetDefaultHandler',
                      'Subscribe',
                      'Unsubscribe'},
    'class_name': 'EventManager',
    'class_parent': ['GameFrameworkModule', 'IEventManager'],
    'class_properties': [('EventHandlerCount', 'int'),
                         ('EventCount', 'int'),
                         ('Priority', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Event\\GameEventArgs.cs',
  [{'class_dependencies': {'BaseEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'GameEventArgs',
    'class_parent': ['BaseEventArgs'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\FileSystem\\CommonFileSystemStream.cs',
  [{'class_dependencies': {'FileSystemStream', 'FileStream', 'IDisposable'},
    'class_fields': [('m_FileStream', 'FileStream')],
    'class_method_calls': [],
    'class_methods': {'Dispose'},
    'class_name': 'CommonFileSystemStream',
    'class_parent': ['FileSystemStream', 'IDisposable'],
    'class_properties': [('Position', 'long'), ('Length', 'long')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\FileSystem\\FileSystem.BlockData.cs',
  [{'class_dependencies': {'IFileSystem'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'FileSystem',
    'class_parent': ['IFileSystem'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\FileSystem\\FileSystem.cs',
  [{'class_dependencies': {'BlockData',
                           'FileInfo',
                           'FileInfo[]',
                           'FileSystem',
                           'FileSystemAccess',
                           'FileSystemStream',
                           'GameFrameworkMultiDictionary',
                           'HeaderData',
                           'IFileSystem',
                           'SortedDictionary',
                           'StringData',
                           'byte[]'},
    'class_fields': [('ClusterSize', 'int'),
                     ('CachedBytesLength', 'int'),
                     ('EmptyStringArray', 'string'),
                     ('s_CachedBytes', 'byte'),
                     ('HeaderDataSize', 'int'),
                     ('BlockDataSize', 'int'),
                     ('StringDataSize', 'int'),
                     ('m_FullPath', 'string'),
                     ('m_Access', 'FileSystemAccess'),
                     ('m_Stream', 'FileSystemStream'),
                     ('m_FileDatas', 'Dictionary<string, int>'),
                     ('m_BlockDatas', 'List<BlockData>'),
                     ('m_FreeBlockIndexes',
                      'GameFrameworkMultiDictionary<int, int>'),
                     ('m_StringDatas', 'SortedDictionary<int, StringData>'),
                     ('m_FreeStringIndexes', 'Queue<int>'),
                     ('m_FreeStringDatas', 'Queue<StringData>'),
                     ('m_HeaderData', 'HeaderData'),
                     ('m_BlockDataOffset', 'int'),
                     ('m_StringDataOffset', 'int'),
                     ('m_FileDataOffset', 'int')],
    'class_method_calls': [('Utility.Marshal', 'StructureToBytes'),
                           ('Utility.Marshal', 'BytesToStructure<HeaderData>'),
                           ('Utility.Marshal', 'BytesToStructure<BlockData>'),
                           ('Utility.Text', 'Format'),
                           ('File', 'Exists'),
                           ('File', 'Delete'),
                           ('Path', 'GetDirectoryName'),
                           ('Directory', 'CreateDirectory')],
    'class_methods': {'Create',
                      'DeleteFile',
                      'GetAllFileInfos',
                      'GetFileInfo',
                      'HasFile',
                      'Load',
                      'ReadFile',
                      'ReadFileSegment',
                      'RenameFile',
                      'SaveAsFile',
                      'Shutdown',
                      'WriteFile'},
    'class_name': 'FileSystem',
    'class_parent': ['IFileSystem'],
    'class_properties': [('FullPath', 'string'),
                         ('Access', 'FileSystemAccess'),
                         ('FileCount', 'int'),
                         ('MaxFileCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\FileSystem\\FileSystem.HeaderData.cs',
  [{'class_dependencies': {'IFileSystem'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'FileSystem',
    'class_parent': ['IFileSystem'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\FileSystem\\FileSystem.StringData.cs',
  [{'class_dependencies': {'IFileSystem'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'FileSystem',
    'class_parent': ['IFileSystem'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\FileSystem\\FileSystemManager.cs',
  [{'class_dependencies': {'FileSystem',
                           'GameFrameworkModule',
                           'IFileSystem',
                           'IFileSystemHelper',
                           'IFileSystemManager',
                           'IFileSystem[]'},
    'class_fields': [('m_FileSystems', 'Dictionary<string, FileSystem>'),
                     ('m_FileSystemHelper', 'IFileSystemHelper')],
    'class_method_calls': [('Utility.Path', 'GetRegularPath'),
                           ('Utility.Text', 'Format'),
                           ('File', 'Exists'),
                           ('File', 'Delete')],
    'class_methods': {'CreateFileSystem',
                      'DestroyFileSystem',
                      'GetAllFileSystems',
                      'GetFileSystem',
                      'HasFileSystem',
                      'LoadFileSystem',
                      'SetFileSystemHelper'},
    'class_name': 'FileSystemManager',
    'class_parent': ['GameFrameworkModule', 'IFileSystemManager'],
    'class_properties': [('Priority', 'int'), ('Count', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\FileSystem\\FileSystemStream.cs',
  [{'class_dependencies': set(),
    'class_fields': [('CachedBytesLength', 'int'), ('s_CachedBytes', 'byte')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'FileSystemStream',
    'class_parent': [],
    'class_properties': [('Position', 'long'), ('Length', 'long')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Fsm\\Fsm.cs',
  [{'class_dependencies': {'FsmBase',
                           'FsmState',
                           'FsmState<T>',
                           'FsmState<T>[]',
                           'IReference',
                           'TData',
                           'TState'},
    'class_fields': [('m_Owner', 'T'),
                     ('m_States', 'Dictionary<Type, FsmState<T>>'),
                     ('m_Datas', 'Dictionary<string, Variable>'),
                     ('m_CurrentState', 'FsmState<T>'),
                     ('m_CurrentStateTime', 'float'),
                     ('m_IsDestroyed', 'bool')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'Clear',
                      'Create',
                      'GetAllStates',
                      'GetData',
                      'GetState',
                      'HasData',
                      'HasState',
                      'RemoveData',
                      'SetData',
                      'Start'},
    'class_name': 'Fsm',
    'class_parent': ['FsmBase', 'IReference'],
    'class_properties': [('Owner', 'T'),
                         ('OwnerType', 'Type'),
                         ('FsmStateCount', 'int'),
                         ('IsRunning', 'bool'),
                         ('IsDestroyed', 'bool'),
                         ('CurrentState', 'FsmState<T>'),
                         ('CurrentStateName', 'string'),
                         ('CurrentStateTime', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Fsm\\FsmBase.cs',
  [{'class_dependencies': set(),
    'class_fields': [('m_Name', 'string')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'FsmBase',
    'class_parent': [],
    'class_properties': [('Name', 'string'),
                         ('FullName', 'string'),
                         ('OwnerType', 'Type'),
                         ('FsmStateCount', 'int'),
                         ('IsRunning', 'bool'),
                         ('IsDestroyed', 'bool'),
                         ('CurrentStateName', 'string'),
                         ('CurrentStateTime', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Fsm\\FsmManager.cs',
  [{'class_dependencies': {'FsmBase',
                           'FsmBase[]',
                           'GameFrameworkModule',
                           'IFsm<T>',
                           'IFsmManager',
                           'TypeNamePair'},
    'class_fields': [('m_Fsms', 'Dictionary<TypeNamePair, FsmBase>'),
                     ('m_TempFsms', 'List<FsmBase>')],
    'class_method_calls': [('Utility.Text', 'Format'), ('Fsm<T>', 'Create')],
    'class_methods': {'CreateFsm',
                      'DestroyFsm',
                      'GetAllFsms',
                      'GetFsm',
                      'HasFsm'},
    'class_name': 'FsmManager',
    'class_parent': ['GameFrameworkModule', 'IFsmManager'],
    'class_properties': [('Priority', 'int'), ('Count', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Fsm\\FsmState.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'FsmState',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Localization\\LocalizationManager.cs',
  [{'class_dependencies': {'DataProvider',
                           'GameFrameworkModule',
                           'ILocalizationHelper',
                           'ILocalizationManager'},
    'class_fields': [('m_Dictionary', 'Dictionary<string, string>'),
                     ('m_DataProvider', 'DataProvider<ILocalizationManager>'),
                     ('m_LocalizationHelper', 'ILocalizationHelper'),
                     ('m_Language', 'Language')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'AddRawString',
                      'EnsureCachedBytesSize',
                      'FreeCachedBytes',
                      'GetRawString',
                      'GetString',
                      'HasRawString',
                      'ParseData',
                      'ReadData',
                      'RemoveAllRawStrings',
                      'RemoveRawString',
                      'SetDataProviderHelper',
                      'SetLocalizationHelper',
                      'SetResourceManager'},
    'class_name': 'LocalizationManager',
    'class_parent': ['GameFrameworkModule', 'ILocalizationManager'],
    'class_properties': [('Language', 'Language'),
                         ('SystemLanguage', 'Language'),
                         ('DictionaryCount', 'int'),
                         ('CachedBytesSize', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkClosedEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'INetworkChannel',
                           'NetworkClosedEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'NetworkClosedEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('NetworkChannel', 'INetworkChannel')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkConnectedEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'INetworkChannel',
                           'NetworkConnectedEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'NetworkConnectedEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('NetworkChannel', 'INetworkChannel'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkCustomErrorEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'INetworkChannel',
                           'NetworkCustomErrorEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'NetworkCustomErrorEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('NetworkChannel', 'INetworkChannel'),
                         ('CustomErrorData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkErrorEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'INetworkChannel',
                           'NetworkErrorCode',
                           'NetworkErrorEventArgs',
                           'SocketError'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'NetworkErrorEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('NetworkChannel', 'INetworkChannel'),
                         ('ErrorCode', 'NetworkErrorCode'),
                         ('SocketErrorCode', 'SocketError'),
                         ('ErrorMessage', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkManager.ConnectState.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'INetworkManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'NetworkManager',
    'class_parent': ['GameFrameworkModule', 'INetworkManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [('m_Socket', 'Socket'), ('m_UserData', 'object')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ConnectState',
    'class_parent': [],
    'class_properties': [('Socket', 'Socket'), ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkManager.cs',
  [{'class_dependencies': {'EventHandler',
                           'GameFrameworkModule',
                           'INetworkChannel',
                           'INetworkChannel[]',
                           'INetworkManager',
                           'NetworkChannelBase',
                           'NetworkClosedEventArgs',
                           'NetworkConnectedEventArgs',
                           'NetworkCustomErrorEventArgs',
                           'NetworkErrorEventArgs',
                           'NetworkMissHeartBeatEventArgs'},
    'class_fields': [('m_NetworkChannels',
                      'Dictionary<string, NetworkChannelBase>'),
                     ('m_NetworkConnectedEventHandler',
                      'EventHandler<NetworkConnectedEventArgs>'),
                     ('m_NetworkClosedEventHandler',
                      'EventHandler<NetworkClosedEventArgs>'),
                     ('m_NetworkMissHeartBeatEventHandler',
                      'EventHandler<NetworkMissHeartBeatEventArgs>'),
                     ('m_NetworkErrorEventHandler',
                      'EventHandler<NetworkErrorEventArgs>'),
                     ('m_NetworkCustomErrorEventHandler',
                      'EventHandler<NetworkCustomErrorEventArgs>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'CreateNetworkChannel',
                      'DestroyNetworkChannel',
                      'GetAllNetworkChannels',
                      'GetNetworkChannel',
                      'HasNetworkChannel'},
    'class_name': 'NetworkManager',
    'class_parent': ['GameFrameworkModule', 'INetworkManager'],
    'class_properties': [('NetworkChannelCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkManager.HeartBeatState.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'INetworkManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'NetworkManager',
    'class_parent': ['GameFrameworkModule', 'INetworkManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [('m_HeartBeatElapseSeconds', 'float'),
                     ('m_MissHeartBeatCount', 'int')],
    'class_method_calls': [],
    'class_methods': {'Reset'},
    'class_name': 'HeartBeatState',
    'class_parent': [],
    'class_properties': [('HeartBeatElapseSeconds', 'float'),
                         ('MissHeartBeatCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkManager.NetworkChannelBase.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'INetworkManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'NetworkManager',
    'class_parent': ['GameFrameworkModule', 'INetworkManager'],
    'class_properties': []},
   {'class_dependencies': {'AddressFamily',
                           'EventPool',
                           'GameFrameworkAction',
                           'HeartBeatState',
                           'IDisposable',
                           'INetworkChannel',
                           'INetworkChannelHelper',
                           'NetworkChannelBase',
                           'NetworkErrorCode',
                           'ReceiveState',
                           'SendState',
                           'ServiceType',
                           'SocketError'},
    'class_fields': [('DefaultHeartBeatInterval', 'float'),
                     ('m_Name', 'string'),
                     ('m_SendPacketPool', 'Queue<Packet>'),
                     ('m_ReceivePacketPool', 'EventPool<Packet>'),
                     ('m_NetworkChannelHelper', 'INetworkChannelHelper'),
                     ('m_AddressFamily', 'AddressFamily'),
                     ('m_ResetHeartBeatElapseSecondsWhenReceivePacket', 'bool'),
                     ('m_HeartBeatInterval', 'float'),
                     ('m_Socket', 'Socket'),
                     ('m_SendState', 'SendState'),
                     ('m_ReceiveState', 'ReceiveState'),
                     ('m_HeartBeatState', 'HeartBeatState'),
                     ('m_SentPacketCount', 'int'),
                     ('m_ReceivedPacketCount', 'int'),
                     ('m_Active', 'bool'),
                     ('m_Disposed', 'bool'),
                     ('NetworkChannelConnected',
                      'GameFrameworkAction<NetworkChannelBase, object>'),
                     ('NetworkChannelClosed',
                      'GameFrameworkAction<NetworkChannelBase>'),
                     ('NetworkChannelMissHeartBeat',
                      'GameFrameworkAction<NetworkChannelBase, int>'),
                     ('NetworkChannelError',
                      'GameFrameworkAction<NetworkChannelBase, '
                      'NetworkErrorCode, SocketError, string>'),
                     ('NetworkChannelCustomError',
                      'GameFrameworkAction<NetworkChannelBase, object>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'Close',
                      'Connect',
                      'Dispose',
                      'RegisterHandler',
                      'Send',
                      'SetDefaultHandler',
                      'Shutdown',
                      'Update'},
    'class_name': 'NetworkChannelBase',
    'class_parent': ['INetworkChannel', 'IDisposable'],
    'class_properties': [('Name', 'string'),
                         ('Socket', 'Socket'),
                         ('Connected', 'bool'),
                         ('ServiceType', 'ServiceType'),
                         ('AddressFamily', 'AddressFamily'),
                         ('SendPacketCount', 'int'),
                         ('SentPacketCount', 'int'),
                         ('ReceivePacketCount', 'int'),
                         ('ReceivedPacketCount', 'int'),
                         ('ResetHeartBeatElapseSecondsWhenReceivePacket',
                          'bool'),
                         ('MissHeartBeatCount', 'int'),
                         ('HeartBeatInterval', 'float'),
                         ('HeartBeatElapseSeconds', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkManager.ReceiveState.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'INetworkManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'NetworkManager',
    'class_parent': ['GameFrameworkModule', 'INetworkManager'],
    'class_properties': []},
   {'class_dependencies': {'MemoryStream', 'IPacketHeader', 'IDisposable'},
    'class_fields': [('DefaultBufferLength', 'int'),
                     ('m_Stream', 'MemoryStream'),
                     ('m_PacketHeader', 'IPacketHeader'),
                     ('m_Disposed', 'bool')],
    'class_method_calls': [],
    'class_methods': {'PrepareForPacket', 'Dispose', 'PrepareForPacketHeader'},
    'class_name': 'ReceiveState',
    'class_parent': ['IDisposable'],
    'class_properties': [('Stream', 'MemoryStream'),
                         ('PacketHeader', 'IPacketHeader')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkManager.SendState.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'INetworkManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'NetworkManager',
    'class_parent': ['GameFrameworkModule', 'INetworkManager'],
    'class_properties': []},
   {'class_dependencies': {'MemoryStream', 'IDisposable'},
    'class_fields': [('DefaultBufferLength', 'int'),
                     ('m_Stream', 'MemoryStream'),
                     ('m_Disposed', 'bool')],
    'class_method_calls': [],
    'class_methods': {'Dispose', 'Reset'},
    'class_name': 'SendState',
    'class_parent': ['IDisposable'],
    'class_properties': [('Stream', 'MemoryStream')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkManager.TcpNetworkChannel.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'INetworkManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'NetworkManager',
    'class_parent': ['GameFrameworkModule', 'INetworkManager'],
    'class_properties': []},
   {'class_dependencies': {'AsyncCallback',
                           'NetworkChannelBase',
                           'ServiceType'},
    'class_fields': [('m_ConnectCallback', 'AsyncCallback'),
                     ('m_SendCallback', 'AsyncCallback'),
                     ('m_ReceiveCallback', 'AsyncCallback')],
    'class_method_calls': [],
    'class_methods': {'Connect'},
    'class_name': 'TcpNetworkChannel',
    'class_parent': ['NetworkChannelBase'],
    'class_properties': [('ServiceType', 'ServiceType')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkManager.TcpWithSyncReceiveNetworkChannel.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'INetworkManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'NetworkManager',
    'class_parent': ['GameFrameworkModule', 'INetworkManager'],
    'class_properties': []},
   {'class_dependencies': {'AsyncCallback',
                           'NetworkChannelBase',
                           'ServiceType'},
    'class_fields': [('m_ConnectCallback', 'AsyncCallback'),
                     ('m_SendCallback', 'AsyncCallback')],
    'class_method_calls': [],
    'class_methods': {'Connect'},
    'class_name': 'TcpWithSyncReceiveNetworkChannel',
    'class_parent': ['NetworkChannelBase'],
    'class_properties': [('ServiceType', 'ServiceType')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\NetworkMissHeartBeatEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'INetworkChannel',
                           'NetworkMissHeartBeatEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'NetworkMissHeartBeatEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('NetworkChannel', 'INetworkChannel'),
                         ('MissCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Network\\Packet.cs',
  [{'class_dependencies': {'BaseEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Packet',
    'class_parent': ['BaseEventArgs'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\ObjectPool\\ObjectBase.cs',
  [{'class_dependencies': {'IReference', 'DateTime'},
    'class_fields': [('m_Name', 'string'),
                     ('m_Target', 'object'),
                     ('m_Locked', 'bool'),
                     ('m_Priority', 'int'),
                     ('m_LastUseTime', 'DateTime')],
    'class_method_calls': [],
    'class_methods': {'Clear'},
    'class_name': 'ObjectBase',
    'class_parent': ['IReference'],
    'class_properties': [('Name', 'string'),
                         ('Target', 'object'),
                         ('Locked', 'bool'),
                         ('Priority', 'int'),
                         ('CustomCanReleaseFlag', 'bool'),
                         ('LastUseTime', 'DateTime')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\ObjectPool\\ObjectPoolBase.cs',
  [{'class_dependencies': {'ObjectInfo[]'},
    'class_fields': [('m_Name', 'string')],
    'class_method_calls': [],
    'class_methods': {'ReleaseAllUnused', 'Release', 'GetAllObjectInfos'},
    'class_name': 'ObjectPoolBase',
    'class_parent': [],
    'class_properties': [('Name', 'string'),
                         ('FullName', 'string'),
                         ('ObjectType', 'Type'),
                         ('Count', 'int'),
                         ('CanReleaseCount', 'int'),
                         ('AllowMultiSpawn', 'bool'),
                         ('AutoReleaseInterval', 'float'),
                         ('Capacity', 'int'),
                         ('ExpireTime', 'float'),
                         ('Priority', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\ObjectPool\\ObjectPoolManager.cs',
  [{'class_dependencies': {'GameFrameworkModule',
                           'IObjectPool<T>',
                           'IObjectPoolManager',
                           'ObjectPoolBase',
                           'ObjectPoolBase[]',
                           'TypeNamePair'},
    'class_fields': [('DefaultCapacity', 'int'),
                     ('DefaultExpireTime', 'float'),
                     ('DefaultPriority', 'int'),
                     ('m_ObjectPools',
                      'Dictionary<TypeNamePair, ObjectPoolBase>'),
                     ('m_CachedAllObjectPools', 'List<ObjectPoolBase>'),
                     ('m_ObjectPoolComparer', 'Comparison<ObjectPoolBase>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'CreateMultiSpawnObjectPool',
                      'CreateSingleSpawnObjectPool',
                      'DestroyObjectPool',
                      'GetAllObjectPools',
                      'GetObjectPool',
                      'GetObjectPools',
                      'HasObjectPool',
                      'Release',
                      'ReleaseAllUnused'},
    'class_name': 'ObjectPoolManager',
    'class_parent': ['GameFrameworkModule', 'IObjectPoolManager'],
    'class_properties': [('Priority', 'int'), ('Count', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\ObjectPool\\ObjectPoolManager.Object.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IObjectPoolManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ObjectPoolManager',
    'class_parent': ['GameFrameworkModule', 'IObjectPoolManager'],
    'class_properties': []},
   {'class_dependencies': {'IReference', 'DateTime'},
    'class_fields': [('m_Object', 'T'), ('m_SpawnCount', 'int')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'Peek', 'Release', 'Create', 'Spawn', 'Unspawn', 'Clear'},
    'class_name': 'Object',
    'class_parent': ['IReference'],
    'class_properties': [('Name', 'string'),
                         ('Locked', 'bool'),
                         ('Priority', 'int'),
                         ('CustomCanReleaseFlag', 'bool'),
                         ('LastUseTime', 'DateTime'),
                         ('IsInUse', 'bool'),
                         ('SpawnCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\ObjectPool\\ObjectPoolManager.ObjectPool.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IObjectPoolManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ObjectPoolManager',
    'class_parent': ['GameFrameworkModule', 'IObjectPoolManager'],
    'class_properties': []},
   {'class_dependencies': {'GameFrameworkMultiDictionary',
                           'ObjectInfo[]',
                           'ObjectPoolBase',
                           'ReleaseObjectFilterCallback'},
    'class_fields': [('m_Objects',
                      'GameFrameworkMultiDictionary<string, Object<T>>'),
                     ('m_ObjectMap', 'Dictionary<object, Object<T>>'),
                     ('m_DefaultReleaseObjectFilterCallback',
                      'ReleaseObjectFilterCallback<T>'),
                     ('m_CachedCanReleaseObjects', 'List<T>'),
                     ('m_CachedToReleaseObjects', 'List<T>'),
                     ('m_AllowMultiSpawn', 'bool'),
                     ('m_AutoReleaseInterval', 'float'),
                     ('m_Capacity', 'int'),
                     ('m_ExpireTime', 'float'),
                     ('m_Priority', 'int'),
                     ('m_AutoReleaseTime', 'float')],
    'class_method_calls': [('Object<T>', 'Create'), ('Utility.Text', 'Format')],
    'class_methods': {'CanSpawn',
                      'GetAllObjectInfos',
                      'Register',
                      'Release',
                      'ReleaseAllUnused',
                      'ReleaseObject',
                      'SetLocked',
                      'SetPriority',
                      'Spawn',
                      'Unspawn'},
    'class_name': 'ObjectPool',
    'class_parent': ['ObjectPoolBase'],
    'class_properties': [('ObjectType', 'Type'),
                         ('Count', 'int'),
                         ('CanReleaseCount', 'int'),
                         ('AllowMultiSpawn', 'bool'),
                         ('AutoReleaseInterval', 'float'),
                         ('Capacity', 'int'),
                         ('ExpireTime', 'float'),
                         ('Priority', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Procedure\\ProcedureBase.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ProcedureBase',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Procedure\\ProcedureManager.cs',
  [{'class_dependencies': {'GameFrameworkModule',
                           'IFsm',
                           'IFsmManager',
                           'IProcedureManager',
                           'ProcedureBase'},
    'class_fields': [('m_FsmManager', 'IFsmManager'),
                     ('m_ProcedureFsm', 'IFsm<IProcedureManager>')],
    'class_method_calls': [],
    'class_methods': {'GetProcedure',
                      'HasProcedure',
                      'Initialize',
                      'StartProcedure'},
    'class_name': 'ProcedureManager',
    'class_parent': ['GameFrameworkModule', 'IProcedureManager'],
    'class_properties': [('Priority', 'int'),
                         ('CurrentProcedure', 'ProcedureBase'),
                         ('CurrentProcedureTime', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\Constant.cs',
  [{'class_dependencies': set(),
    'class_fields': [('DefaultPriority', 'int')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Constant',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadAssetCallbacks.cs',
  [{'class_dependencies': {'LoadAssetDependencyAssetCallback',
                           'LoadAssetFailureCallback',
                           'LoadAssetSuccessCallback',
                           'LoadAssetUpdateCallback'},
    'class_fields': [('m_LoadAssetSuccessCallback', 'LoadAssetSuccessCallback'),
                     ('m_LoadAssetFailureCallback', 'LoadAssetFailureCallback'),
                     ('m_LoadAssetUpdateCallback', 'LoadAssetUpdateCallback'),
                     ('m_LoadAssetDependencyAssetCallback',
                      'LoadAssetDependencyAssetCallback')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'LoadAssetCallbacks',
    'class_parent': [],
    'class_properties': [('LoadAssetSuccessCallback',
                          'LoadAssetSuccessCallback'),
                         ('LoadAssetFailureCallback',
                          'LoadAssetFailureCallback'),
                         ('LoadAssetUpdateCallback', 'LoadAssetUpdateCallback'),
                         ('LoadAssetDependencyAssetCallback',
                          'LoadAssetDependencyAssetCallback')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadBinaryCallbacks.cs',
  [{'class_dependencies': {'LoadBinaryFailureCallback',
                           'LoadBinarySuccessCallback'},
    'class_fields': [('m_LoadBinarySuccessCallback',
                      'LoadBinarySuccessCallback'),
                     ('m_LoadBinaryFailureCallback',
                      'LoadBinaryFailureCallback')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'LoadBinaryCallbacks',
    'class_parent': [],
    'class_properties': [('LoadBinarySuccessCallback',
                          'LoadBinarySuccessCallback'),
                         ('LoadBinaryFailureCallback',
                          'LoadBinaryFailureCallback')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadBytesCallbacks.cs',
  [{'class_dependencies': {'LoadBytesFailureCallback',
                           'LoadBytesSuccessCallback'},
    'class_fields': [('m_LoadBytesSuccessCallback', 'LoadBytesSuccessCallback'),
                     ('m_LoadBytesFailureCallback',
                      'LoadBytesFailureCallback')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'LoadBytesCallbacks',
    'class_parent': [],
    'class_properties': [('LoadBytesSuccessCallback',
                          'LoadBytesSuccessCallback'),
                         ('LoadBytesFailureCallback',
                          'LoadBytesFailureCallback')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadResourceAgentHelperErrorEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadResourceAgentHelperErrorEventArgs',
                           'LoadResourceStatus'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadResourceAgentHelperErrorEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Status', 'LoadResourceStatus'),
                         ('ErrorMessage', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadResourceAgentHelperLoadCompleteEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadResourceAgentHelperLoadCompleteEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadResourceAgentHelperLoadCompleteEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Asset', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadResourceAgentHelperParseBytesCompleteEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadResourceAgentHelperParseBytesCompleteEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadResourceAgentHelperParseBytesCompleteEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Resource', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadResourceAgentHelperReadBytesCompleteEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadResourceAgentHelperReadBytesCompleteEventArgs',
                           'byte[]'},
    'class_fields': [('m_Bytes', 'byte')],
    'class_method_calls': [],
    'class_methods': {'Create', 'GetBytes', 'Clear'},
    'class_name': 'LoadResourceAgentHelperReadBytesCompleteEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadResourceAgentHelperReadFileCompleteEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadResourceAgentHelperReadFileCompleteEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadResourceAgentHelperReadFileCompleteEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Resource', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadResourceAgentHelperUpdateEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadResourceAgentHelperUpdateEventArgs',
                           'LoadResourceProgress'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadResourceAgentHelperUpdateEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Type', 'LoadResourceProgress'),
                         ('Progress', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\LoadSceneCallbacks.cs',
  [{'class_dependencies': {'LoadSceneDependencyAssetCallback',
                           'LoadSceneFailureCallback',
                           'LoadSceneSuccessCallback',
                           'LoadSceneUpdateCallback'},
    'class_fields': [('m_LoadSceneSuccessCallback', 'LoadSceneSuccessCallback'),
                     ('m_LoadSceneFailureCallback', 'LoadSceneFailureCallback'),
                     ('m_LoadSceneUpdateCallback', 'LoadSceneUpdateCallback'),
                     ('m_LoadSceneDependencyAssetCallback',
                      'LoadSceneDependencyAssetCallback')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'LoadSceneCallbacks',
    'class_parent': [],
    'class_properties': [('LoadSceneSuccessCallback',
                          'LoadSceneSuccessCallback'),
                         ('LoadSceneFailureCallback',
                          'LoadSceneFailureCallback'),
                         ('LoadSceneUpdateCallback', 'LoadSceneUpdateCallback'),
                         ('LoadSceneDependencyAssetCallback',
                          'LoadSceneDependencyAssetCallback')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\PackageVersionListSerializer.cs',
  [{'class_dependencies': set(),
    'class_fields': [('Header', 'byte')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'PackageVersionListSerializer',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ReadOnlyVersionListSerializer.cs',
  [{'class_dependencies': set(),
    'class_fields': [('Header', 'byte')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ReadOnlyVersionListSerializer',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ReadWriteVersionListSerializer.cs',
  [{'class_dependencies': set(),
    'class_fields': [('Header', 'byte')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ReadWriteVersionListSerializer',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceApplyFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceApplyFailureEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceApplyFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Name', 'string'),
                         ('ResourcePackPath', 'string'),
                         ('ErrorMessage', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceApplyStartEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceApplyStartEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceApplyStartEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('ResourcePackPath', 'string'),
                         ('Count', 'int'),
                         ('TotalLength', 'long')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceApplySuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceApplySuccessEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceApplySuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Name', 'string'),
                         ('ApplyPath', 'string'),
                         ('ResourcePackPath', 'string'),
                         ('Length', 'int'),
                         ('CompressedLength', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.AssetInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'ResourceName', 'string[]'},
    'class_fields': [('m_AssetName', 'string'),
                     ('m_ResourceName', 'ResourceName'),
                     ('m_DependencyAssetNames', 'string')],
    'class_method_calls': [],
    'class_methods': {'GetDependencyAssetNames'},
    'class_name': 'AssetInfo',
    'class_parent': [],
    'class_properties': [('AssetName', 'string'),
                         ('ResourceName', 'ResourceName')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.cs',
  [{'class_dependencies': {'ApplyResourcesCompleteCallback',
                           'AssetInfo',
                           'CheckResourcesCompleteCallback',
                           'CheckVersionListResult',
                           'DecryptResourceCallback',
                           'EventHandler',
                           'GameFrameworkModule',
                           'HasAssetResult',
                           'IFileSystem',
                           'IFileSystemManager',
                           'IResourceGroup',
                           'IResourceGroupCollection',
                           'IResourceGroup[]',
                           'IResourceHelper',
                           'IResourceManager',
                           'InitResourcesCompleteCallback',
                           'MemoryStream',
                           'PackageVersionListSerializer',
                           'ReadOnlyVersionListSerializer',
                           'ReadWriteResourceInfo',
                           'ReadWriteVersionListSerializer',
                           'ResourceApplyFailureEventArgs',
                           'ResourceApplyStartEventArgs',
                           'ResourceApplySuccessEventArgs',
                           'ResourceChecker',
                           'ResourceGroup',
                           'ResourceInfo',
                           'ResourceIniter',
                           'ResourceLoader',
                           'ResourceMode',
                           'ResourceName',
                           'ResourcePackVersionListSerializer',
                           'ResourceUpdateAllCompleteEventArgs',
                           'ResourceUpdateChangedEventArgs',
                           'ResourceUpdateFailureEventArgs',
                           'ResourceUpdateStartEventArgs',
                           'ResourceUpdateSuccessEventArgs',
                           'ResourceUpdater',
                           'ResourceVerifier',
                           'ResourceVerifyFailureEventArgs',
                           'ResourceVerifyStartEventArgs',
                           'ResourceVerifySuccessEventArgs',
                           'SortedDictionary',
                           'TaskInfo[]',
                           'UpdatableVersionListSerializer',
                           'UpdateResourcesCompleteCallback',
                           'UpdateVersionListCallbacks',
                           'VerifyResourcesCompleteCallback',
                           'VersionListProcessor',
                           'byte[]'},
    'class_fields': [('RemoteVersionListFileName', 'string'),
                     ('LocalVersionListFileName', 'string'),
                     ('DefaultExtension', 'string'),
                     ('TempExtension', 'string'),
                     ('FileSystemMaxFileCount', 'int'),
                     ('FileSystemMaxBlockCount', 'int'),
                     ('m_AssetInfos', 'Dictionary<string, AssetInfo>'),
                     ('m_ResourceInfos',
                      'Dictionary<ResourceName, ResourceInfo>'),
                     ('m_ReadWriteResourceInfos',
                      'SortedDictionary<ResourceName, ReadWriteResourceInfo>'),
                     ('m_ReadOnlyFileSystems',
                      'Dictionary<string, IFileSystem>'),
                     ('m_ReadWriteFileSystems',
                      'Dictionary<string, IFileSystem>'),
                     ('m_ResourceGroups', 'Dictionary<string, ResourceGroup>'),
                     ('m_PackageVersionListSerializer',
                      'PackageVersionListSerializer'),
                     ('m_UpdatableVersionListSerializer',
                      'UpdatableVersionListSerializer'),
                     ('m_ReadOnlyVersionListSerializer',
                      'ReadOnlyVersionListSerializer'),
                     ('m_ReadWriteVersionListSerializer',
                      'ReadWriteVersionListSerializer'),
                     ('m_ResourcePackVersionListSerializer',
                      'ResourcePackVersionListSerializer'),
                     ('m_FileSystemManager', 'IFileSystemManager'),
                     ('m_ResourceIniter', 'ResourceIniter'),
                     ('m_VersionListProcessor', 'VersionListProcessor'),
                     ('m_ResourceVerifier', 'ResourceVerifier'),
                     ('m_ResourceChecker', 'ResourceChecker'),
                     ('m_ResourceUpdater', 'ResourceUpdater'),
                     ('m_ResourceLoader', 'ResourceLoader'),
                     ('m_ResourceHelper', 'IResourceHelper'),
                     ('m_ReadOnlyPath', 'string'),
                     ('m_ReadWritePath', 'string'),
                     ('m_ResourceMode', 'ResourceMode'),
                     ('m_RefuseSetFlag', 'bool'),
                     ('m_CurrentVariant', 'string'),
                     ('m_UpdatePrefixUri', 'string'),
                     ('m_ApplicableGameVersion', 'string'),
                     ('m_InternalResourceVersion', 'int'),
                     ('m_CachedStream', 'MemoryStream'),
                     ('m_DecryptResourceCallback', 'DecryptResourceCallback'),
                     ('m_InitResourcesCompleteCallback',
                      'InitResourcesCompleteCallback'),
                     ('m_UpdateVersionListCallbacks',
                      'UpdateVersionListCallbacks'),
                     ('m_VerifyResourcesCompleteCallback',
                      'VerifyResourcesCompleteCallback'),
                     ('m_CheckResourcesCompleteCallback',
                      'CheckResourcesCompleteCallback'),
                     ('m_ApplyResourcesCompleteCallback',
                      'ApplyResourcesCompleteCallback'),
                     ('m_UpdateResourcesCompleteCallback',
                      'UpdateResourcesCompleteCallback'),
                     ('m_ResourceVerifyStartEventHandler',
                      'EventHandler<ResourceVerifyStartEventArgs>'),
                     ('m_ResourceVerifySuccessEventHandler',
                      'EventHandler<ResourceVerifySuccessEventArgs>'),
                     ('m_ResourceVerifyFailureEventHandler',
                      'EventHandler<ResourceVerifyFailureEventArgs>'),
                     ('m_ResourceApplyStartEventHandler',
                      'EventHandler<ResourceApplyStartEventArgs>'),
                     ('m_ResourceApplySuccessEventHandler',
                      'EventHandler<ResourceApplySuccessEventArgs>'),
                     ('m_ResourceApplyFailureEventHandler',
                      'EventHandler<ResourceApplyFailureEventArgs>'),
                     ('m_ResourceUpdateStartEventHandler',
                      'EventHandler<ResourceUpdateStartEventArgs>'),
                     ('m_ResourceUpdateChangedEventHandler',
                      'EventHandler<ResourceUpdateChangedEventArgs>'),
                     ('m_ResourceUpdateSuccessEventHandler',
                      'EventHandler<ResourceUpdateSuccessEventArgs>'),
                     ('m_ResourceUpdateFailureEventHandler',
                      'EventHandler<ResourceUpdateFailureEventArgs>'),
                     ('m_ResourceUpdateAllCompleteEventHandler',
                      'EventHandler<ResourceUpdateAllCompleteEventArgs>')],
    'class_method_calls': [('File', 'Exists'),
                           ('Utility.Text', 'Format'),
                           ('Utility.Verifier', 'GetCrc32')],
    'class_methods': {'AddLoadResourceAgentHelper',
                      'ApplyResources',
                      'CheckResources',
                      'CheckVersionList',
                      'GetAllLoadAssetInfos',
                      'GetAllResourceGroups',
                      'GetBinaryLength',
                      'GetBinaryPath',
                      'GetResourceGroup',
                      'GetResourceGroupCollection',
                      'HasAsset',
                      'HasResourceGroup',
                      'InitResources',
                      'LoadAsset',
                      'LoadBinary',
                      'LoadBinaryFromFileSystem',
                      'LoadBinarySegmentFromFileSystem',
                      'LoadScene',
                      'SetCurrentVariant',
                      'SetDecryptResourceCallback',
                      'SetDownloadManager',
                      'SetFileSystemManager',
                      'SetObjectPoolManager',
                      'SetReadOnlyPath',
                      'SetReadWritePath',
                      'SetResourceHelper',
                      'SetResourceMode',
                      'StopUpdateResources',
                      'UnloadAsset',
                      'UnloadScene',
                      'UpdateResources',
                      'UpdateVersionList',
                      'VerifyResourcePack',
                      'VerifyResources'},
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': [('Priority', 'int'),
                         ('ReadOnlyPath', 'string'),
                         ('ReadWritePath', 'string'),
                         ('ResourceMode', 'ResourceMode'),
                         ('CurrentVariant', 'string'),
                         ('PackageVersionListSerializer',
                          'PackageVersionListSerializer'),
                         ('UpdatableVersionListSerializer',
                          'UpdatableVersionListSerializer'),
                         ('ReadOnlyVersionListSerializer',
                          'ReadOnlyVersionListSerializer'),
                         ('ReadWriteVersionListSerializer',
                          'ReadWriteVersionListSerializer'),
                         ('ResourcePackVersionListSerializer',
                          'ResourcePackVersionListSerializer'),
                         ('ApplicableGameVersion', 'string'),
                         ('InternalResourceVersion', 'int'),
                         ('AssetCount', 'int'),
                         ('ResourceCount', 'int'),
                         ('ResourceGroupCount', 'int'),
                         ('UpdatePrefixUri', 'string'),
                         ('GenerateReadWriteVersionListLength', 'int'),
                         ('ApplyingResourcePackPath', 'string'),
                         ('ApplyWaitingCount', 'int'),
                         ('UpdateRetryCount', 'int'),
                         ('UpdatingResourceGroup', 'IResourceGroup'),
                         ('UpdateWaitingCount', 'int'),
                         ('UpdateWaitingWhilePlayingCount', 'int'),
                         ('UpdateCandidateCount', 'int'),
                         ('LoadTotalAgentCount', 'int'),
                         ('LoadFreeAgentCount', 'int'),
                         ('LoadWorkingAgentCount', 'int'),
                         ('LoadWaitingTaskCount', 'int'),
                         ('AssetAutoReleaseInterval', 'float'),
                         ('AssetCapacity', 'int'),
                         ('AssetExpireTime', 'float'),
                         ('AssetPriority', 'int'),
                         ('ResourceAutoReleaseInterval', 'float'),
                         ('ResourceCapacity', 'int'),
                         ('ResourceExpireTime', 'float'),
                         ('ResourcePriority', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.LoadType.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ReadWriteResourceInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceChecker.CheckInfo.CheckStatus.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceChecker',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'CheckInfo',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceChecker.CheckInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceChecker',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'CheckStatus',
                           'LoadType',
                           'LocalVersionInfo',
                           'RemoteVersionInfo',
                           'ResourceName'},
    'class_fields': [('m_ResourceName', 'ResourceName'),
                     ('m_Status', 'CheckStatus'),
                     ('m_NeedRemove', 'bool'),
                     ('m_NeedMoveToDisk', 'bool'),
                     ('m_NeedMoveToFileSystem', 'bool'),
                     ('m_VersionInfo', 'RemoteVersionInfo'),
                     ('m_ReadOnlyInfo', 'LocalVersionInfo'),
                     ('m_ReadWriteInfo', 'LocalVersionInfo'),
                     ('m_CachedFileSystemName', 'string')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'RefreshStatus',
                      'SetCachedFileSystemName',
                      'SetReadOnlyInfo',
                      'SetReadWriteInfo',
                      'SetVersionInfo'},
    'class_name': 'CheckInfo',
    'class_parent': [],
    'class_properties': [('ResourceName', 'ResourceName'),
                         ('Status', 'CheckStatus'),
                         ('NeedRemove', 'bool'),
                         ('NeedMoveToDisk', 'bool'),
                         ('NeedMoveToFileSystem', 'bool'),
                         ('FileSystemName', 'string'),
                         ('ReadWriteUseFileSystem', 'bool'),
                         ('ReadWriteFileSystemName', 'string'),
                         ('LoadType', 'LoadType'),
                         ('Length', 'int'),
                         ('HashCode', 'int'),
                         ('CompressedLength', 'int'),
                         ('CompressedHashCode', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceChecker.CheckInfo.LocalVersionInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceChecker',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'CheckInfo',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceChecker.CheckInfo.RemoteVersionInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceChecker',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'CheckInfo',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceChecker.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'CheckInfo',
                           'GameFrameworkAction',
                           'LoadType',
                           'ResourceManager',
                           'ResourceName'},
    'class_fields': [('m_ResourceManager', 'ResourceManager'),
                     ('m_CheckInfos', 'Dictionary<ResourceName, CheckInfo>'),
                     ('m_CurrentVariant', 'string'),
                     ('m_IgnoreOtherVariant', 'bool'),
                     ('m_UpdatableVersionListReady', 'bool'),
                     ('m_ReadOnlyVersionListReady', 'bool'),
                     ('m_ReadWriteVersionListReady', 'bool'),
                     ('ResourceNeedUpdate',
                      'GameFrameworkAction<ResourceName, string, LoadType, '
                      'int, int, int, int>'),
                     ('ResourceCheckComplete',
                      'GameFrameworkAction<int, int, int, long, long>')],
    'class_method_calls': [],
    'class_methods': {'CheckResources', 'Shutdown'},
    'class_name': 'ResourceChecker',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceGroup.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'HashSet',
                           'IResourceGroup',
                           'ResourceInfo',
                           'ResourceName',
                           'ResourceName[]',
                           'string[]'},
    'class_fields': [('m_Name', 'string'),
                     ('m_ResourceInfos',
                      'Dictionary<ResourceName, ResourceInfo>'),
                     ('m_ResourceNames', 'HashSet<ResourceName>'),
                     ('m_TotalLength', 'long'),
                     ('m_TotalCompressedLength', 'long')],
    'class_method_calls': [],
    'class_methods': {'AddResource',
                      'GetResourceNames',
                      'HasResource',
                      'InternalGetResourceNames'},
    'class_name': 'ResourceGroup',
    'class_parent': ['IResourceGroup'],
    'class_properties': [('Name', 'string'),
                         ('Ready', 'bool'),
                         ('TotalCount', 'int'),
                         ('ReadyCount', 'int'),
                         ('TotalLength', 'long'),
                         ('TotalCompressedLength', 'long'),
                         ('ReadyLength', 'long'),
                         ('ReadyCompressedLength', 'long'),
                         ('Progress', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceGroupCollection.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'HashSet',
                           'IResourceGroupCollection',
                           'IResourceGroup[]',
                           'ResourceInfo',
                           'ResourceName',
                           'string[]'},
    'class_fields': [('m_ResourceGroups', 'ResourceGroup'),
                     ('m_ResourceInfos',
                      'Dictionary<ResourceName, ResourceInfo>'),
                     ('m_ResourceNames', 'HashSet<ResourceName>'),
                     ('m_TotalLength', 'long'),
                     ('m_TotalCompressedLength', 'long')],
    'class_method_calls': [],
    'class_methods': {'GetResourceNames', 'GetResourceGroups'},
    'class_name': 'ResourceGroupCollection',
    'class_parent': ['IResourceGroupCollection'],
    'class_properties': [('Ready', 'bool'),
                         ('TotalCount', 'int'),
                         ('ReadyCount', 'int'),
                         ('TotalLength', 'long'),
                         ('TotalCompressedLength', 'long'),
                         ('ReadyLength', 'long'),
                         ('ReadyCompressedLength', 'long'),
                         ('Progress', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'ResourceName', 'LoadType'},
    'class_fields': [('m_ResourceName', 'ResourceName'),
                     ('m_FileSystemName', 'string'),
                     ('m_LoadType', 'LoadType'),
                     ('m_Length', 'int'),
                     ('m_HashCode', 'int'),
                     ('m_CompressedLength', 'int'),
                     ('m_StorageInReadOnly', 'bool'),
                     ('m_Ready', 'bool')],
    'class_method_calls': [],
    'class_methods': {'MarkReady'},
    'class_name': 'ResourceInfo',
    'class_parent': [],
    'class_properties': [('ResourceName', 'ResourceName'),
                         ('UseFileSystem', 'bool'),
                         ('FileSystemName', 'string'),
                         ('IsLoadFromBinary', 'bool'),
                         ('LoadType', 'LoadType'),
                         ('Length', 'int'),
                         ('HashCode', 'int'),
                         ('CompressedLength', 'int'),
                         ('StorageInReadOnly', 'bool'),
                         ('Ready', 'bool')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceIniter.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'GameFrameworkAction',
                           'ResourceManager',
                           'ResourceName'},
    'class_fields': [('m_ResourceManager', 'ResourceManager'),
                     ('m_CachedFileSystemNames',
                      'Dictionary<ResourceName, string>'),
                     ('m_CurrentVariant', 'string'),
                     ('ResourceInitComplete', 'GameFrameworkAction')],
    'class_method_calls': [],
    'class_methods': {'InitResources', 'Shutdown'},
    'class_name': 'ResourceIniter',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceLoader.AssetObject.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceLoader',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'AssetObject',
                           'IResourceHelper',
                           'ObjectBase',
                           'ResourceLoader'},
    'class_fields': [('m_DependencyAssets', 'List<object>'),
                     ('m_Resource', 'object'),
                     ('m_ResourceHelper', 'IResourceHelper'),
                     ('m_ResourceLoader', 'ResourceLoader')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'AssetObject',
    'class_parent': ['ObjectBase'],
    'class_properties': [('CustomCanReleaseFlag', 'bool')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceLoader.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'AssetObject',
                           'HasAssetResult',
                           'IObjectPool',
                           'LoadBytesCallbacks',
                           'LoadResourceTaskBase',
                           'ResourceManager',
                           'ResourceObject',
                           'TaskInfo[]',
                           'TaskPool',
                           'byte[]'},
    'class_fields': [('CachedHashBytesLength', 'int'),
                     ('m_ResourceManager', 'ResourceManager'),
                     ('m_TaskPool', 'TaskPool<LoadResourceTaskBase>'),
                     ('m_AssetDependencyCount', 'Dictionary<object, int>'),
                     ('m_ResourceDependencyCount', 'Dictionary<object, int>'),
                     ('m_AssetToResourceMap', 'Dictionary<object, object>'),
                     ('m_SceneToAssetMap', 'Dictionary<string, object>'),
                     ('m_LoadBytesCallbacks', 'LoadBytesCallbacks'),
                     ('m_CachedHashBytes', 'byte'),
                     ('m_AssetPool', 'IObjectPool<AssetObject>'),
                     ('m_ResourcePool', 'IObjectPool<ResourceObject>')],
    'class_method_calls': [('Utility.Text', 'Format'),
                           ('Utility.Path', 'GetRegularPath'),
                           ('Utility.Path', 'GetRemotePath')],
    'class_methods': {'AddLoadResourceAgentHelper',
                      'GetAllLoadAssetInfos',
                      'GetBinaryLength',
                      'GetBinaryPath',
                      'HasAsset',
                      'LoadAsset',
                      'LoadBinary',
                      'LoadBinaryFromFileSystem',
                      'LoadBinarySegmentFromFileSystem',
                      'LoadScene',
                      'SetObjectPoolManager',
                      'Shutdown',
                      'UnloadAsset',
                      'UnloadScene',
                      'Update'},
    'class_name': 'ResourceLoader',
    'class_parent': [],
    'class_properties': [('TotalAgentCount', 'int'),
                         ('FreeAgentCount', 'int'),
                         ('WorkingAgentCount', 'int'),
                         ('WaitingTaskCount', 'int'),
                         ('AssetAutoReleaseInterval', 'float'),
                         ('AssetCapacity', 'int'),
                         ('AssetExpireTime', 'float'),
                         ('AssetPriority', 'int'),
                         ('ResourceAutoReleaseInterval', 'float'),
                         ('ResourceCapacity', 'int'),
                         ('ResourceExpireTime', 'float'),
                         ('ResourcePriority', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceLoader.LoadAssetTask.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceLoader',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'LoadAssetCallbacks',
                           'LoadAssetTask',
                           'LoadResourceTaskBase'},
    'class_fields': [('m_LoadAssetCallbacks', 'LoadAssetCallbacks')],
    'class_method_calls': [],
    'class_methods': {'Clear',
                      'Create',
                      'OnLoadAssetFailure',
                      'OnLoadAssetSuccess',
                      'OnLoadAssetUpdate',
                      'OnLoadDependencyAsset'},
    'class_name': 'LoadAssetTask',
    'class_parent': ['LoadResourceTaskBase'],
    'class_properties': [('IsScene', 'bool')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceLoader.LoadBinaryInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceLoader',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'IReference',
                           'LoadBinaryCallbacks',
                           'LoadBinaryInfo',
                           'ResourceInfo'},
    'class_fields': [('m_BinaryAssetName', 'string'),
                     ('m_ResourceInfo', 'ResourceInfo'),
                     ('m_LoadBinaryCallbacks', 'LoadBinaryCallbacks'),
                     ('m_UserData', 'object')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadBinaryInfo',
    'class_parent': ['IReference'],
    'class_properties': [('BinaryAssetName', 'string'),
                         ('ResourceInfo', 'ResourceInfo'),
                         ('LoadBinaryCallbacks', 'LoadBinaryCallbacks'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceLoader.LoadDependencyAssetTask.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceLoader',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'LoadResourceTaskBase', 'LoadDependencyAssetTask'},
    'class_fields': [('m_MainTask', 'LoadResourceTaskBase')],
    'class_method_calls': [],
    'class_methods': {'Clear',
                      'Create',
                      'OnLoadAssetFailure',
                      'OnLoadAssetSuccess'},
    'class_name': 'LoadDependencyAssetTask',
    'class_parent': ['LoadResourceTaskBase'],
    'class_properties': [('IsScene', 'bool')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceLoader.LoadResourceAgent.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceLoader',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'DecryptResourceCallback',
                           'HashSet',
                           'ILoadResourceAgentHelper',
                           'IResourceHelper',
                           'LoadResourceTaskBase',
                           'ResourceLoader',
                           'StartTaskStatus'},
    'class_fields': [('s_CachedResourceNames', 'Dictionary<string, string>'),
                     ('s_LoadingAssetNames', 'HashSet<string>'),
                     ('s_LoadingResourceNames', 'HashSet<string>'),
                     ('m_Helper', 'ILoadResourceAgentHelper'),
                     ('m_ResourceHelper', 'IResourceHelper'),
                     ('m_ResourceLoader', 'ResourceLoader'),
                     ('m_ReadOnlyPath', 'string'),
                     ('m_ReadWritePath', 'string'),
                     ('m_DecryptResourceCallback', 'DecryptResourceCallback'),
                     ('m_Task', 'LoadResourceTaskBase')],
    'class_method_calls': [('Utility.Path', 'GetRegularPath'),
                           ('Utility.Text', 'Format')],
    'class_methods': {'Clear',
                      'Initialize',
                      'Reset',
                      'Shutdown',
                      'Start',
                      'Update'},
    'class_name': 'LoadResourceAgent',
    'class_parent': [],
    'class_properties': [('Helper', 'ILoadResourceAgentHelper'),
                         ('Task', 'LoadResourceTaskBase')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceLoader.LoadResourceTaskBase.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceLoader',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'DateTime',
                           'List<object>',
                           'ResourceInfo',
                           'ResourceObject',
                           'TaskBase',
                           'string[]'},
    'class_fields': [('s_Serial', 'int'),
                     ('m_AssetName', 'string'),
                     ('m_AssetType', 'Type'),
                     ('m_ResourceInfo', 'ResourceInfo'),
                     ('m_DependencyAssetNames', 'string'),
                     ('m_DependencyAssets', 'List<object>'),
                     ('m_ResourceObject', 'ResourceObject'),
                     ('m_StartTime', 'DateTime'),
                     ('m_TotalDependencyAssetCount', 'int')],
    'class_method_calls': [],
    'class_methods': {'Clear',
                      'GetDependencyAssetNames',
                      'GetDependencyAssets',
                      'LoadMain',
                      'OnLoadAssetFailure',
                      'OnLoadAssetSuccess',
                      'OnLoadAssetUpdate',
                      'OnLoadDependencyAsset'},
    'class_name': 'LoadResourceTaskBase',
    'class_parent': ['TaskBase'],
    'class_properties': [('AssetName', 'string'),
                         ('AssetType', 'Type'),
                         ('ResourceInfo', 'ResourceInfo'),
                         ('ResourceObject', 'ResourceObject'),
                         ('IsScene', 'bool'),
                         ('StartTime', 'DateTime'),
                         ('LoadedDependencyAssetCount', 'int'),
                         ('TotalDependencyAssetCount', 'int'),
                         ('Description', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceLoader.LoadSceneTask.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceLoader',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'LoadResourceTaskBase',
                           'LoadSceneCallbacks',
                           'LoadSceneTask'},
    'class_fields': [('m_LoadSceneCallbacks', 'LoadSceneCallbacks')],
    'class_method_calls': [],
    'class_methods': {'Clear',
                      'Create',
                      'OnLoadAssetFailure',
                      'OnLoadAssetSuccess',
                      'OnLoadAssetUpdate',
                      'OnLoadDependencyAsset'},
    'class_name': 'LoadSceneTask',
    'class_parent': ['LoadResourceTaskBase'],
    'class_properties': [('IsScene', 'bool')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceLoader.ResourceObject.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceLoader',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'IResourceHelper',
                           'ObjectBase',
                           'ResourceLoader',
                           'ResourceObject'},
    'class_fields': [('m_DependencyResources', 'List<object>'),
                     ('m_ResourceHelper', 'IResourceHelper'),
                     ('m_ResourceLoader', 'ResourceLoader')],
    'class_method_calls': [],
    'class_methods': {'AddDependencyResource', 'Create', 'Clear'},
    'class_name': 'ResourceObject',
    'class_parent': ['ObjectBase'],
    'class_properties': [('CustomCanReleaseFlag', 'bool')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceName.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceNameComparer.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Equals', 'GetHashCode', 'Compare'},
    'class_name': 'ResourceNameComparer',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceUpdater.ApplyInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceUpdater',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceUpdater.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'ApplyInfo',
                           'FileStream',
                           'GameFrameworkAction',
                           'HashSet',
                           'IDownloadManager',
                           'IResourceGroup',
                           'ResourceGroup',
                           'ResourceManager',
                           'ResourceName',
                           'SortedDictionary',
                           'UpdateInfo'},
    'class_fields': [('CachedHashBytesLength', 'int'),
                     ('CachedBytesLength', 'int'),
                     ('m_ResourceManager', 'ResourceManager'),
                     ('m_ApplyWaitingInfo', 'Queue<ApplyInfo>'),
                     ('m_UpdateWaitingInfo', 'List<UpdateInfo>'),
                     ('m_UpdateWaitingInfoWhilePlaying', 'HashSet<UpdateInfo>'),
                     ('m_UpdateCandidateInfo',
                      'Dictionary<ResourceName, UpdateInfo>'),
                     ('m_CachedFileSystemsForGenerateReadWriteVersionList',
                      'SortedDictionary<string, List<int>>'),
                     ('m_CachedResourceNames', 'List<ResourceName>'),
                     ('m_CachedHashBytes', 'byte'),
                     ('m_CachedBytes', 'byte'),
                     ('m_DownloadManager', 'IDownloadManager'),
                     ('m_CheckResourcesComplete', 'bool'),
                     ('m_ApplyingResourcePackPath', 'string'),
                     ('m_ApplyingResourcePackStream', 'FileStream'),
                     ('m_UpdatingResourceGroup', 'ResourceGroup'),
                     ('m_GenerateReadWriteVersionListLength', 'int'),
                     ('m_CurrentGenerateReadWriteVersionListLength', 'int'),
                     ('m_UpdateRetryCount', 'int'),
                     ('m_FailureFlag', 'bool'),
                     ('m_ReadWriteVersionListFileName', 'string'),
                     ('m_ReadWriteVersionListTempFileName', 'string'),
                     ('ResourceApplyStart',
                      'GameFrameworkAction<string, int, long>'),
                     ('ResourceApplySuccess',
                      'GameFrameworkAction<ResourceName, string, string, int, '
                      'int>'),
                     ('ResourceApplyFailure',
                      'GameFrameworkAction<ResourceName, string, string>'),
                     ('ResourceApplyComplete',
                      'GameFrameworkAction<string, bool>'),
                     ('ResourceUpdateStart',
                      'GameFrameworkAction<ResourceName, string, string, int, '
                      'int, int>'),
                     ('ResourceUpdateChanged',
                      'GameFrameworkAction<ResourceName, string, string, int, '
                      'int>'),
                     ('ResourceUpdateSuccess',
                      'GameFrameworkAction<ResourceName, string, string, int, '
                      'int>'),
                     ('ResourceUpdateFailure',
                      'GameFrameworkAction<ResourceName, string, int, int, '
                      'string>'),
                     ('ResourceUpdateComplete',
                      'GameFrameworkAction<ResourceGroup, bool>'),
                     ('ResourceUpdateAllComplete', 'GameFrameworkAction')],
    'class_method_calls': [('Array', 'Clear'), ('Utility.Text', 'Format')],
    'class_methods': {'AddResourceUpdate',
                      'ApplyResources',
                      'CheckResourceComplete',
                      'SetDownloadManager',
                      'Shutdown',
                      'StopUpdateResources',
                      'Update',
                      'UpdateResource',
                      'UpdateResources'},
    'class_name': 'ResourceUpdater',
    'class_parent': [],
    'class_properties': [('GenerateReadWriteVersionListLength', 'int'),
                         ('ApplyingResourcePackPath', 'string'),
                         ('ApplyWaitingCount', 'int'),
                         ('UpdateRetryCount', 'int'),
                         ('UpdatingResourceGroup', 'IResourceGroup'),
                         ('UpdateWaitingCount', 'int'),
                         ('UpdateWaitingWhilePlayingCount', 'int'),
                         ('UpdateCandidateCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceUpdater.UpdateInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceUpdater',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'ResourceName', 'LoadType'},
    'class_fields': [('m_ResourceName', 'ResourceName'),
                     ('m_FileSystemName', 'string'),
                     ('m_LoadType', 'LoadType'),
                     ('m_Length', 'int'),
                     ('m_HashCode', 'int'),
                     ('m_CompressedLength', 'int'),
                     ('m_CompressedHashCode', 'int'),
                     ('m_ResourcePath', 'string'),
                     ('m_Downloading', 'bool'),
                     ('m_RetryCount', 'int')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'UpdateInfo',
    'class_parent': [],
    'class_properties': [('ResourceName', 'ResourceName'),
                         ('UseFileSystem', 'bool'),
                         ('FileSystemName', 'string'),
                         ('LoadType', 'LoadType'),
                         ('Length', 'int'),
                         ('HashCode', 'int'),
                         ('CompressedLength', 'int'),
                         ('CompressedHashCode', 'int'),
                         ('ResourcePath', 'string'),
                         ('Downloading', 'bool'),
                         ('RetryCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceVerifier.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'GameFrameworkAction',
                           'ResourceManager',
                           'ResourceName',
                           'VerifyInfo'},
    'class_fields': [('CachedHashBytesLength', 'int'),
                     ('m_ResourceManager', 'ResourceManager'),
                     ('m_VerifyInfos', 'List<VerifyInfo>'),
                     ('m_CachedHashBytes', 'byte'),
                     ('m_LoadReadWriteVersionListComplete', 'bool'),
                     ('m_VerifyResourceLengthPerFrame', 'int'),
                     ('m_VerifyResourceIndex', 'int'),
                     ('m_FailureFlag', 'bool'),
                     ('ResourceVerifyStart', 'GameFrameworkAction<int, long>'),
                     ('ResourceVerifySuccess',
                      'GameFrameworkAction<ResourceName, int>'),
                     ('ResourceVerifyFailure',
                      'GameFrameworkAction<ResourceName>'),
                     ('ResourceVerifyComplete', 'GameFrameworkAction<bool>')],
    'class_method_calls': [],
    'class_methods': {'VerifyResources', 'Update', 'Shutdown'},
    'class_name': 'ResourceVerifier',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.ResourceVerifier.VerifyInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceVerifier',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceManager.VersionListProcessor.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IResourceManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourceManager',
    'class_parent': ['GameFrameworkModule', 'IResourceManager'],
    'class_properties': []},
   {'class_dependencies': {'CheckVersionListResult',
                           'GameFrameworkAction',
                           'IDownloadManager',
                           'ResourceManager'},
    'class_fields': [('m_ResourceManager', 'ResourceManager'),
                     ('m_DownloadManager', 'IDownloadManager'),
                     ('m_VersionListLength', 'int'),
                     ('m_VersionListHashCode', 'int'),
                     ('m_VersionListCompressedLength', 'int'),
                     ('m_VersionListCompressedHashCode', 'int'),
                     ('VersionListUpdateSuccess',
                      'GameFrameworkAction<string, string>'),
                     ('VersionListUpdateFailure',
                      'GameFrameworkAction<string, string>')],
    'class_method_calls': [('Utility.Path', 'GetRegularPath'),
                           ('File', 'Exists'),
                           ('Path', 'Combine'),
                           ('Utility.Text', 'Format')],
    'class_methods': {'CheckVersionList',
                      'SetDownloadManager',
                      'Shutdown',
                      'UpdateVersionList'},
    'class_name': 'VersionListProcessor',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourcePackVersionListSerializer.cs',
  [{'class_dependencies': set(),
    'class_fields': [('Header', 'byte')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ResourcePackVersionListSerializer',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceUpdateAllCompleteEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceUpdateAllCompleteEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceUpdateAllCompleteEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceUpdateChangedEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceUpdateChangedEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceUpdateChangedEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Name', 'string'),
                         ('DownloadPath', 'string'),
                         ('DownloadUri', 'string'),
                         ('CurrentLength', 'int'),
                         ('CompressedLength', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceUpdateFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceUpdateFailureEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceUpdateFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Name', 'string'),
                         ('DownloadUri', 'string'),
                         ('RetryCount', 'int'),
                         ('TotalRetryCount', 'int'),
                         ('ErrorMessage', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceUpdateStartEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceUpdateStartEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceUpdateStartEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Name', 'string'),
                         ('DownloadPath', 'string'),
                         ('DownloadUri', 'string'),
                         ('CurrentLength', 'int'),
                         ('CompressedLength', 'int'),
                         ('RetryCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceUpdateSuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceUpdateSuccessEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceUpdateSuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Name', 'string'),
                         ('DownloadPath', 'string'),
                         ('DownloadUri', 'string'),
                         ('Length', 'int'),
                         ('CompressedLength', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceVerifyFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceVerifyFailureEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceVerifyFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Name', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceVerifyStartEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceVerifyStartEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceVerifyStartEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Count', 'int'), ('TotalLength', 'long')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\ResourceVerifySuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResourceVerifySuccessEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResourceVerifySuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Name', 'string'), ('Length', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\UnloadSceneCallbacks.cs',
  [{'class_dependencies': {'UnloadSceneFailureCallback',
                           'UnloadSceneSuccessCallback'},
    'class_fields': [('m_UnloadSceneSuccessCallback',
                      'UnloadSceneSuccessCallback'),
                     ('m_UnloadSceneFailureCallback',
                      'UnloadSceneFailureCallback')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'UnloadSceneCallbacks',
    'class_parent': [],
    'class_properties': [('UnloadSceneSuccessCallback',
                          'UnloadSceneSuccessCallback'),
                         ('UnloadSceneFailureCallback',
                          'UnloadSceneFailureCallback')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\UpdatableVersionListSerializer.cs',
  [{'class_dependencies': set(),
    'class_fields': [('Header', 'byte')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'UpdatableVersionListSerializer',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Resource\\UpdateVersionListCallbacks.cs',
  [{'class_dependencies': {'UpdateVersionListFailureCallback',
                           'UpdateVersionListSuccessCallback'},
    'class_fields': [('m_UpdateVersionListSuccessCallback',
                      'UpdateVersionListSuccessCallback'),
                     ('m_UpdateVersionListFailureCallback',
                      'UpdateVersionListFailureCallback')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'UpdateVersionListCallbacks',
    'class_parent': [],
    'class_properties': [('UpdateVersionListSuccessCallback',
                          'UpdateVersionListSuccessCallback'),
                         ('UpdateVersionListFailureCallback',
                          'UpdateVersionListFailureCallback')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Scene\\LoadSceneDependencyAssetEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadSceneDependencyAssetEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadSceneDependencyAssetEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SceneAssetName', 'string'),
                         ('DependencyAssetName', 'string'),
                         ('LoadedCount', 'int'),
                         ('TotalCount', 'int'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Scene\\LoadSceneFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadSceneFailureEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadSceneFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SceneAssetName', 'string'),
                         ('ErrorMessage', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Scene\\LoadSceneSuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadSceneSuccessEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadSceneSuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SceneAssetName', 'string'),
                         ('Duration', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Scene\\LoadSceneUpdateEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'LoadSceneUpdateEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'LoadSceneUpdateEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SceneAssetName', 'string'),
                         ('Progress', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Scene\\SceneManager.cs',
  [{'class_dependencies': {'EventHandler',
                           'GameFrameworkModule',
                           'IResourceManager',
                           'ISceneManager',
                           'LoadSceneCallbacks',
                           'LoadSceneDependencyAssetEventArgs',
                           'LoadSceneFailureEventArgs',
                           'LoadSceneSuccessEventArgs',
                           'LoadSceneUpdateEventArgs',
                           'UnloadSceneCallbacks',
                           'UnloadSceneFailureEventArgs',
                           'UnloadSceneSuccessEventArgs',
                           'string[]'},
    'class_fields': [('m_LoadedSceneAssetNames', 'List<string>'),
                     ('m_LoadingSceneAssetNames', 'List<string>'),
                     ('m_UnloadingSceneAssetNames', 'List<string>'),
                     ('m_LoadSceneCallbacks', 'LoadSceneCallbacks'),
                     ('m_UnloadSceneCallbacks', 'UnloadSceneCallbacks'),
                     ('m_ResourceManager', 'IResourceManager'),
                     ('m_LoadSceneSuccessEventHandler',
                      'EventHandler<LoadSceneSuccessEventArgs>'),
                     ('m_LoadSceneFailureEventHandler',
                      'EventHandler<LoadSceneFailureEventArgs>'),
                     ('m_LoadSceneUpdateEventHandler',
                      'EventHandler<LoadSceneUpdateEventArgs>'),
                     ('m_LoadSceneDependencyAssetEventHandler',
                      'EventHandler<LoadSceneDependencyAssetEventArgs>'),
                     ('m_UnloadSceneSuccessEventHandler',
                      'EventHandler<UnloadSceneSuccessEventArgs>'),
                     ('m_UnloadSceneFailureEventHandler',
                      'EventHandler<UnloadSceneFailureEventArgs>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'GetLoadedSceneAssetNames',
                      'GetLoadingSceneAssetNames',
                      'GetUnloadingSceneAssetNames',
                      'HasScene',
                      'LoadScene',
                      'SceneIsLoaded',
                      'SceneIsLoading',
                      'SceneIsUnloading',
                      'SetResourceManager',
                      'UnloadScene'},
    'class_name': 'SceneManager',
    'class_parent': ['GameFrameworkModule', 'ISceneManager'],
    'class_properties': [('Priority', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Scene\\UnloadSceneFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'UnloadSceneFailureEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'UnloadSceneFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SceneAssetName', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Scene\\UnloadSceneSuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'UnloadSceneSuccessEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'UnloadSceneSuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SceneAssetName', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Setting\\SettingManager.cs',
  [{'class_dependencies': {'GameFrameworkModule',
                           'ISettingHelper',
                           'ISettingManager',
                           'string[]'},
    'class_fields': [('m_SettingHelper', 'ISettingHelper')],
    'class_method_calls': [],
    'class_methods': {'GetAllSettingNames',
                      'GetBool',
                      'GetFloat',
                      'GetInt',
                      'GetObject',
                      'GetString',
                      'HasSetting',
                      'Load',
                      'RemoveAllSettings',
                      'RemoveSetting',
                      'Save',
                      'SetBool',
                      'SetFloat',
                      'SetInt',
                      'SetObject',
                      'SetSettingHelper',
                      'SetString'},
    'class_name': 'SettingManager',
    'class_parent': ['GameFrameworkModule', 'ISettingManager'],
    'class_properties': [('Count', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\Constant.cs',
  [{'class_dependencies': set(),
    'class_fields': [('DefaultTime', 'float'),
                     ('DefaultMute', 'bool'),
                     ('DefaultLoop', 'bool'),
                     ('DefaultPriority', 'int'),
                     ('DefaultVolume', 'float'),
                     ('DefaultFadeInSeconds', 'float'),
                     ('DefaultFadeOutSeconds', 'float'),
                     ('DefaultPitch', 'float'),
                     ('DefaultPanStereo', 'float'),
                     ('DefaultSpatialBlend', 'float'),
                     ('DefaultMaxDistance', 'float'),
                     ('DefaultDopplerLevel', 'float')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Constant',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\PlaySoundDependencyAssetEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'PlaySoundDependencyAssetEventArgs',
                           'PlaySoundParams'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'PlaySoundDependencyAssetEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('SoundAssetName', 'string'),
                         ('SoundGroupName', 'string'),
                         ('PlaySoundParams', 'PlaySoundParams'),
                         ('DependencyAssetName', 'string'),
                         ('LoadedCount', 'int'),
                         ('TotalCount', 'int'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\PlaySoundFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'PlaySoundErrorCode',
                           'PlaySoundFailureEventArgs',
                           'PlaySoundParams'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'PlaySoundFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('SoundAssetName', 'string'),
                         ('SoundGroupName', 'string'),
                         ('PlaySoundParams', 'PlaySoundParams'),
                         ('ErrorCode', 'PlaySoundErrorCode'),
                         ('ErrorMessage', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\PlaySoundParams.cs',
  [{'class_dependencies': {'IReference', 'PlaySoundParams'},
    'class_fields': [('m_Referenced', 'bool'),
                     ('m_Time', 'float'),
                     ('m_MuteInSoundGroup', 'bool'),
                     ('m_Loop', 'bool'),
                     ('m_Priority', 'int'),
                     ('m_VolumeInSoundGroup', 'float'),
                     ('m_FadeInSeconds', 'float'),
                     ('m_Pitch', 'float'),
                     ('m_PanStereo', 'float'),
                     ('m_SpatialBlend', 'float'),
                     ('m_MaxDistance', 'float'),
                     ('m_DopplerLevel', 'float')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'PlaySoundParams',
    'class_parent': ['IReference'],
    'class_properties': [('Time', 'float'),
                         ('MuteInSoundGroup', 'bool'),
                         ('Loop', 'bool'),
                         ('Priority', 'int'),
                         ('VolumeInSoundGroup', 'float'),
                         ('FadeInSeconds', 'float'),
                         ('Pitch', 'float'),
                         ('PanStereo', 'float'),
                         ('SpatialBlend', 'float'),
                         ('MaxDistance', 'float'),
                         ('DopplerLevel', 'float'),
                         ('Referenced', 'bool')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\PlaySoundSuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ISoundAgent',
                           'PlaySoundSuccessEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'PlaySoundSuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('SoundAssetName', 'string'),
                         ('SoundAgent', 'ISoundAgent'),
                         ('Duration', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\PlaySoundUpdateEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'PlaySoundParams',
                           'PlaySoundUpdateEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'PlaySoundUpdateEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('SoundAssetName', 'string'),
                         ('SoundGroupName', 'string'),
                         ('PlaySoundParams', 'PlaySoundParams'),
                         ('Progress', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\ResetSoundAgentEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ResetSoundAgentEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ResetSoundAgentEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\SoundManager.cs',
  [{'class_dependencies': {'EventHandler',
                           'GameFrameworkModule',
                           'HashSet',
                           'IResourceManager',
                           'ISoundGroup',
                           'ISoundGroup[]',
                           'ISoundHelper',
                           'ISoundManager',
                           'LoadAssetCallbacks',
                           'PlaySoundDependencyAssetEventArgs',
                           'PlaySoundFailureEventArgs',
                           'PlaySoundSuccessEventArgs',
                           'PlaySoundUpdateEventArgs',
                           'SoundGroup',
                           'int[]'},
    'class_fields': [('m_SoundGroups', 'Dictionary<string, SoundGroup>'),
                     ('m_SoundsBeingLoaded', 'List<int>'),
                     ('m_SoundsToReleaseOnLoad', 'HashSet<int>'),
                     ('m_LoadAssetCallbacks', 'LoadAssetCallbacks'),
                     ('m_ResourceManager', 'IResourceManager'),
                     ('m_SoundHelper', 'ISoundHelper'),
                     ('m_Serial', 'int'),
                     ('m_PlaySoundSuccessEventHandler',
                      'EventHandler<PlaySoundSuccessEventArgs>'),
                     ('m_PlaySoundFailureEventHandler',
                      'EventHandler<PlaySoundFailureEventArgs>'),
                     ('m_PlaySoundUpdateEventHandler',
                      'EventHandler<PlaySoundUpdateEventArgs>'),
                     ('m_PlaySoundDependencyAssetEventHandler',
                      'EventHandler<PlaySoundDependencyAssetEventArgs>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'AddSoundAgentHelper',
                      'AddSoundGroup',
                      'GetAllLoadingSoundSerialIds',
                      'GetAllSoundGroups',
                      'GetSoundGroup',
                      'HasSoundGroup',
                      'IsLoadingSound',
                      'PauseSound',
                      'PlaySound',
                      'ResumeSound',
                      'SetResourceManager',
                      'SetSoundHelper',
                      'StopAllLoadedSounds',
                      'StopAllLoadingSounds',
                      'StopSound'},
    'class_name': 'SoundManager',
    'class_parent': ['GameFrameworkModule', 'ISoundManager'],
    'class_properties': [('SoundGroupCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\SoundManager.PlaySoundInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'ISoundManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'SoundManager',
    'class_parent': ['GameFrameworkModule', 'ISoundManager'],
    'class_properties': []},
   {'class_dependencies': {'IReference',
                           'PlaySoundInfo',
                           'PlaySoundParams',
                           'SoundGroup'},
    'class_fields': [('m_SerialId', 'int'),
                     ('m_SoundGroup', 'SoundGroup'),
                     ('m_PlaySoundParams', 'PlaySoundParams'),
                     ('m_UserData', 'object')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'PlaySoundInfo',
    'class_parent': ['IReference'],
    'class_properties': [('SerialId', 'int'),
                         ('SoundGroup', 'SoundGroup'),
                         ('PlaySoundParams', 'PlaySoundParams'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\SoundManager.SoundAgent.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'ISoundManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'SoundManager',
    'class_parent': ['GameFrameworkModule', 'ISoundManager'],
    'class_properties': []},
   {'class_dependencies': {'DateTime',
                           'ISoundAgent',
                           'ISoundAgentHelper',
                           'ISoundGroup',
                           'ISoundHelper',
                           'SoundGroup'},
    'class_fields': [('m_SoundGroup', 'SoundGroup'),
                     ('m_SoundHelper', 'ISoundHelper'),
                     ('m_SoundAgentHelper', 'ISoundAgentHelper'),
                     ('m_SerialId', 'int'),
                     ('m_SoundAsset', 'object'),
                     ('m_SetSoundAssetTime', 'DateTime'),
                     ('m_MuteInSoundGroup', 'bool'),
                     ('m_VolumeInSoundGroup', 'float')],
    'class_method_calls': [],
    'class_methods': {'Pause', 'Play', 'Stop', 'Reset', 'Resume'},
    'class_name': 'SoundAgent',
    'class_parent': ['ISoundAgent'],
    'class_properties': [('SoundGroup', 'ISoundGroup'),
                         ('SerialId', 'int'),
                         ('IsPlaying', 'bool'),
                         ('Length', 'float'),
                         ('Time', 'float'),
                         ('Mute', 'bool'),
                         ('MuteInSoundGroup', 'bool'),
                         ('Loop', 'bool'),
                         ('Priority', 'int'),
                         ('Volume', 'float'),
                         ('VolumeInSoundGroup', 'float'),
                         ('Pitch', 'float'),
                         ('PanStereo', 'float'),
                         ('SpatialBlend', 'float'),
                         ('MaxDistance', 'float'),
                         ('DopplerLevel', 'float'),
                         ('Helper', 'ISoundAgentHelper'),
                         ('SetSoundAssetTime', 'DateTime')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Sound\\SoundManager.SoundGroup.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'ISoundManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'SoundManager',
    'class_parent': ['GameFrameworkModule', 'ISoundManager'],
    'class_properties': []},
   {'class_dependencies': {'ISoundAgent',
                           'ISoundGroup',
                           'ISoundGroupHelper',
                           'SoundAgent'},
    'class_fields': [('m_Name', 'string'),
                     ('m_SoundGroupHelper', 'ISoundGroupHelper'),
                     ('m_SoundAgents', 'List<SoundAgent>'),
                     ('m_AvoidBeingReplacedBySamePriority', 'bool'),
                     ('m_Mute', 'bool'),
                     ('m_Volume', 'float')],
    'class_method_calls': [],
    'class_methods': {'AddSoundAgentHelper',
                      'PauseSound',
                      'PlaySound',
                      'ResumeSound',
                      'StopAllLoadedSounds',
                      'StopSound'},
    'class_name': 'SoundGroup',
    'class_parent': ['ISoundGroup'],
    'class_properties': [('Name', 'string'),
                         ('SoundAgentCount', 'int'),
                         ('AvoidBeingReplacedBySamePriority', 'bool'),
                         ('Mute', 'bool'),
                         ('Volume', 'float'),
                         ('Helper', 'ISoundGroupHelper')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\CloseUIFormCompleteEventArgs.cs',
  [{'class_dependencies': {'CloseUIFormCompleteEventArgs',
                           'GameFrameworkEventArgs',
                           'IUIGroup'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'CloseUIFormCompleteEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('UIFormAssetName', 'string'),
                         ('UIGroup', 'IUIGroup'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\OpenUIFormDependencyAssetEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'OpenUIFormDependencyAssetEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'OpenUIFormDependencyAssetEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('UIFormAssetName', 'string'),
                         ('UIGroupName', 'string'),
                         ('PauseCoveredUIForm', 'bool'),
                         ('DependencyAssetName', 'string'),
                         ('LoadedCount', 'int'),
                         ('TotalCount', 'int'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\OpenUIFormFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'OpenUIFormFailureEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'OpenUIFormFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('UIFormAssetName', 'string'),
                         ('UIGroupName', 'string'),
                         ('PauseCoveredUIForm', 'bool'),
                         ('ErrorMessage', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\OpenUIFormSuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'IUIForm',
                           'OpenUIFormSuccessEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'OpenUIFormSuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('UIForm', 'IUIForm'),
                         ('Duration', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\OpenUIFormUpdateEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'OpenUIFormUpdateEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'OpenUIFormUpdateEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('UIFormAssetName', 'string'),
                         ('UIGroupName', 'string'),
                         ('PauseCoveredUIForm', 'bool'),
                         ('Progress', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\UIManager.cs',
  [{'class_dependencies': {'CloseUIFormCompleteEventArgs',
                           'EventHandler',
                           'GameFrameworkModule',
                           'HashSet',
                           'IObjectPool',
                           'IObjectPoolManager',
                           'IResourceManager',
                           'IUIForm',
                           'IUIFormHelper',
                           'IUIForm[]',
                           'IUIGroup',
                           'IUIGroup[]',
                           'IUIManager',
                           'LoadAssetCallbacks',
                           'OpenUIFormDependencyAssetEventArgs',
                           'OpenUIFormFailureEventArgs',
                           'OpenUIFormSuccessEventArgs',
                           'OpenUIFormUpdateEventArgs',
                           'UIFormInstanceObject',
                           'UIGroup',
                           'int[]'},
    'class_fields': [('m_UIGroups', 'Dictionary<string, UIGroup>'),
                     ('m_UIFormsBeingLoaded', 'Dictionary<int, string>'),
                     ('m_UIFormsToReleaseOnLoad', 'HashSet<int>'),
                     ('m_RecycleQueue', 'Queue<IUIForm>'),
                     ('m_LoadAssetCallbacks', 'LoadAssetCallbacks'),
                     ('m_ObjectPoolManager', 'IObjectPoolManager'),
                     ('m_ResourceManager', 'IResourceManager'),
                     ('m_InstancePool', 'IObjectPool<UIFormInstanceObject>'),
                     ('m_UIFormHelper', 'IUIFormHelper'),
                     ('m_Serial', 'int'),
                     ('m_IsShutdown', 'bool'),
                     ('m_OpenUIFormSuccessEventHandler',
                      'EventHandler<OpenUIFormSuccessEventArgs>'),
                     ('m_OpenUIFormFailureEventHandler',
                      'EventHandler<OpenUIFormFailureEventArgs>'),
                     ('m_OpenUIFormUpdateEventHandler',
                      'EventHandler<OpenUIFormUpdateEventArgs>'),
                     ('m_OpenUIFormDependencyAssetEventHandler',
                      'EventHandler<OpenUIFormDependencyAssetEventArgs>'),
                     ('m_CloseUIFormCompleteEventHandler',
                      'EventHandler<CloseUIFormCompleteEventArgs>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'AddUIGroup',
                      'CloseAllLoadedUIForms',
                      'CloseAllLoadingUIForms',
                      'CloseUIForm',
                      'GetAllLoadedUIForms',
                      'GetAllLoadingUIFormSerialIds',
                      'GetAllUIGroups',
                      'GetUIForm',
                      'GetUIForms',
                      'GetUIGroup',
                      'HasUIForm',
                      'HasUIGroup',
                      'IsLoadingUIForm',
                      'IsValidUIForm',
                      'OpenUIForm',
                      'RefocusUIForm',
                      'SetObjectPoolManager',
                      'SetResourceManager',
                      'SetUIFormHelper',
                      'SetUIFormInstanceLocked',
                      'SetUIFormInstancePriority'},
    'class_name': 'UIManager',
    'class_parent': ['GameFrameworkModule', 'IUIManager'],
    'class_properties': [('UIGroupCount', 'int'),
                         ('InstanceAutoReleaseInterval', 'float'),
                         ('InstanceCapacity', 'int'),
                         ('InstanceExpireTime', 'float'),
                         ('InstancePriority', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\UIManager.OpenUIFormInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IUIManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'UIManager',
    'class_parent': ['GameFrameworkModule', 'IUIManager'],
    'class_properties': []},
   {'class_dependencies': {'OpenUIFormInfo', 'IReference', 'UIGroup'},
    'class_fields': [('m_SerialId', 'int'),
                     ('m_UIGroup', 'UIGroup'),
                     ('m_PauseCoveredUIForm', 'bool'),
                     ('m_UserData', 'object')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'OpenUIFormInfo',
    'class_parent': ['IReference'],
    'class_properties': [('SerialId', 'int'),
                         ('UIGroup', 'UIGroup'),
                         ('PauseCoveredUIForm', 'bool'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\UIManager.UIFormInstanceObject.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IUIManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'UIManager',
    'class_parent': ['GameFrameworkModule', 'IUIManager'],
    'class_properties': []},
   {'class_dependencies': {'IUIFormHelper',
                           'ObjectBase',
                           'UIFormInstanceObject'},
    'class_fields': [('m_UIFormAsset', 'object'),
                     ('m_UIFormHelper', 'IUIFormHelper')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'UIFormInstanceObject',
    'class_parent': ['ObjectBase'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\UIManager.UIGroup.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IUIManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'UIManager',
    'class_parent': ['GameFrameworkModule', 'IUIManager'],
    'class_properties': []},
   {'class_dependencies': {'GameFrameworkLinkedList',
                           'IUIForm',
                           'IUIForm[]',
                           'IUIGroup',
                           'IUIGroupHelper',
                           'LinkedListNode',
                           'UIFormInfo'},
    'class_fields': [('m_Name', 'string'),
                     ('m_Depth', 'int'),
                     ('m_Pause', 'bool'),
                     ('m_UIGroupHelper', 'IUIGroupHelper'),
                     ('m_UIFormInfos', 'GameFrameworkLinkedList<UIFormInfo>'),
                     ('m_CachedNode', 'LinkedListNode<UIFormInfo>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'AddUIForm',
                      'GetAllUIForms',
                      'GetUIForm',
                      'GetUIForms',
                      'HasUIForm',
                      'RefocusUIForm',
                      'Refresh',
                      'RemoveUIForm',
                      'Update'},
    'class_name': 'UIGroup',
    'class_parent': ['IUIGroup'],
    'class_properties': [('Name', 'string'),
                         ('Depth', 'int'),
                         ('Pause', 'bool'),
                         ('UIFormCount', 'int'),
                         ('CurrentUIForm', 'IUIForm'),
                         ('Helper', 'IUIGroupHelper')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\UI\\UIManager.UIGroup.UIFormInfo.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IUIManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'UIManager',
    'class_parent': ['GameFrameworkModule', 'IUIManager'],
    'class_properties': []},
   {'class_dependencies': {'IUIGroup'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'UIGroup',
    'class_parent': ['IUIGroup'],
    'class_properties': []},
   {'class_dependencies': {'IReference', 'UIFormInfo', 'IUIForm'},
    'class_fields': [('m_UIForm', 'IUIForm'),
                     ('m_Paused', 'bool'),
                     ('m_Covered', 'bool')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'UIFormInfo',
    'class_parent': ['IReference'],
    'class_properties': [('UIForm', 'IUIForm'),
                         ('Paused', 'bool'),
                         ('Covered', 'bool')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Assembly.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [('s_Assemblies', 'System.Reflection.Assembly'),
                     ('s_CachedTypes', 'Dictionary<string, Type>')],
    'class_method_calls': [('Type', 'GetType'), ('Text', 'Format')],
    'class_methods': {'GetType', 'GetTypes', 'GetAssemblies'},
    'class_name': 'Assembly',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Compression.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'byte[]', 'ICompressionHelper'},
    'class_fields': [('s_CompressionHelper', 'ICompressionHelper')],
    'class_method_calls': [('Text', 'Format')],
    'class_methods': {'Compress', 'Decompress', 'SetCompressionHelper'},
    'class_name': 'Compression',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Compression.ICompressionHelper.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Compression',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Encryption.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'byte[]'},
    'class_fields': [('QuickEncryptLength', 'int')],
    'class_method_calls': [('Array', 'Copy')],
    'class_methods': {'GetQuickSelfXorBytes',
                      'GetQuickXorBytes',
                      'GetSelfXorBytes',
                      'GetXorBytes'},
    'class_name': 'Encryption',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Json.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'IJsonHelper'},
    'class_fields': [('s_JsonHelper', 'IJsonHelper')],
    'class_method_calls': [('Text', 'Format')],
    'class_methods': {'ToObject', 'SetJsonHelper', 'ToJson'},
    'class_name': 'Json',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Json.IJsonHelper.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Json',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Marshal.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'byte[]', 'IntPtr'},
    'class_fields': [('BlockSize', 'int'),
                     ('s_CachedHGlobalPtr', 'IntPtr'),
                     ('s_CachedHGlobalSize', 'int')],
    'class_method_calls': [],
    'class_methods': {'BytesToStructure',
                      'EnsureCachedHGlobalSize',
                      'FreeCachedHGlobal',
                      'StructureToBytes'},
    'class_name': 'Marshal',
    'class_parent': [],
    'class_properties': [('CachedHGlobalSize', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Path.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [('Directory', 'Exists'),
                           ('Directory', 'GetDirectories'),
                           ('Directory', 'GetFiles'),
                           ('Directory', 'Delete')],
    'class_methods': {'GetRegularPath',
                      'GetRemotePath',
                      'RemoveEmptyDirectory'},
    'class_name': 'Path',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Random.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'GetRandom',
                      'GetRandomBytes',
                      'GetRandomDouble',
                      'SetSeed'},
    'class_name': 'Random',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Text.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'ITextHelper'},
    'class_fields': [('s_TextHelper', 'ITextHelper')],
    'class_method_calls': [],
    'class_methods': {'SetTextHelper', 'Format'},
    'class_name': 'Text',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Text.ITextHelper.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Text',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Verifier.Crc32.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Verifier',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': set(),
    'class_fields': [('TableLength', 'int'),
                     ('DefaultPolynomial', 'uint'),
                     ('DefaultSeed', 'uint'),
                     ('m_Seed', 'uint'),
                     ('m_Table', 'uint'),
                     ('m_Hash', 'uint')],
    'class_method_calls': [],
    'class_methods': {'HashCore', 'Initialize', 'HashFinal'},
    'class_name': 'Crc32',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Utility\\Utility.Verifier.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Utility',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'byte[]'},
    'class_fields': [('CachedBytesLength', 'int'),
                     ('s_CachedBytes', 'byte'),
                     ('s_Algorithm', 'Crc32')],
    'class_method_calls': [('Array', 'Clear')],
    'class_methods': {'GetCrc32', 'GetCrc32Bytes'},
    'class_name': 'Verifier',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\Constant.cs',
  [{'class_dependencies': set(),
    'class_fields': [('DefaultPriority', 'int')],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Constant',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\WebRequestAgentHelperCompleteEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'WebRequestAgentHelperCompleteEventArgs',
                           'byte[]'},
    'class_fields': [('m_WebResponseBytes', 'byte')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear', 'GetWebResponseBytes'},
    'class_name': 'WebRequestAgentHelperCompleteEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\WebRequestAgentHelperErrorEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'WebRequestAgentHelperErrorEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'WebRequestAgentHelperErrorEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('ErrorMessage', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\WebRequestFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'WebRequestFailureEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'WebRequestFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('WebRequestUri', 'string'),
                         ('ErrorMessage', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\WebRequestManager.cs',
  [{'class_dependencies': {'EventHandler',
                           'GameFrameworkModule',
                           'IWebRequestManager',
                           'TaskInfo',
                           'TaskInfo[]',
                           'TaskPool',
                           'WebRequestFailureEventArgs',
                           'WebRequestStartEventArgs',
                           'WebRequestSuccessEventArgs',
                           'WebRequestTask'},
    'class_fields': [('m_TaskPool', 'TaskPool<WebRequestTask>'),
                     ('m_Timeout', 'float'),
                     ('m_WebRequestStartEventHandler',
                      'EventHandler<WebRequestStartEventArgs>'),
                     ('m_WebRequestSuccessEventHandler',
                      'EventHandler<WebRequestSuccessEventArgs>'),
                     ('m_WebRequestFailureEventHandler',
                      'EventHandler<WebRequestFailureEventArgs>')],
    'class_method_calls': [],
    'class_methods': {'AddWebRequest',
                      'AddWebRequestAgentHelper',
                      'GetAllWebRequestInfos',
                      'GetWebRequestInfo',
                      'GetWebRequestInfos',
                      'RemoveAllWebRequests',
                      'RemoveWebRequest',
                      'RemoveWebRequests'},
    'class_name': 'WebRequestManager',
    'class_parent': ['GameFrameworkModule', 'IWebRequestManager'],
    'class_properties': [('TotalAgentCount', 'int'),
                         ('FreeAgentCount', 'int'),
                         ('WorkingAgentCount', 'int'),
                         ('WaitingTaskCount', 'int'),
                         ('Timeout', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\WebRequestManager.WebRequestAgent.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IWebRequestManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'WebRequestManager',
    'class_parent': ['GameFrameworkModule', 'IWebRequestManager'],
    'class_properties': []},
   {'class_dependencies': {'GameFrameworkAction',
                           'IWebRequestAgentHelper',
                           'StartTaskStatus',
                           'WebRequestAgent',
                           'WebRequestTask'},
    'class_fields': [('m_Helper', 'IWebRequestAgentHelper'),
                     ('m_Task', 'WebRequestTask'),
                     ('m_WaitTime', 'float'),
                     ('WebRequestAgentStart',
                      'GameFrameworkAction<WebRequestAgent>'),
                     ('WebRequestAgentSuccess',
                      'GameFrameworkAction<WebRequestAgent, byte[]>'),
                     ('WebRequestAgentFailure',
                      'GameFrameworkAction<WebRequestAgent, string>')],
    'class_method_calls': [],
    'class_methods': {'Shutdown', 'Start', 'Reset', 'Update', 'Initialize'},
    'class_name': 'WebRequestAgent',
    'class_parent': [],
    'class_properties': [('Task', 'WebRequestTask'), ('WaitTime', 'float')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\WebRequestManager.WebRequestTask.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IWebRequestManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'WebRequestManager',
    'class_parent': ['GameFrameworkModule', 'IWebRequestManager'],
    'class_properties': []},
   {'class_dependencies': {'TaskBase',
                           'WebRequestTask',
                           'WebRequestTaskStatus',
                           'byte[]'},
    'class_fields': [('s_Serial', 'int'),
                     ('m_Status', 'WebRequestTaskStatus'),
                     ('m_WebRequestUri', 'string'),
                     ('m_PostData', 'byte'),
                     ('m_Timeout', 'float')],
    'class_method_calls': [],
    'class_methods': {'GetPostData', 'Create', 'Clear'},
    'class_name': 'WebRequestTask',
    'class_parent': ['TaskBase'],
    'class_properties': [('Status', 'WebRequestTaskStatus'),
                         ('WebRequestUri', 'string'),
                         ('Timeout', 'float'),
                         ('Description', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\WebRequestManager.WebRequestTaskStatus.cs',
  [{'class_dependencies': {'GameFrameworkModule', 'IWebRequestManager'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'WebRequestManager',
    'class_parent': ['GameFrameworkModule', 'IWebRequestManager'],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\WebRequestStartEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'WebRequestStartEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'WebRequestStartEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('WebRequestUri', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\WebRequest\\WebRequestSuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'WebRequestSuccessEventArgs',
                           'byte[]'},
    'class_fields': [('m_WebResponseBytes', 'byte')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear', 'GetWebResponseBytes'},
    'class_name': 'WebRequestSuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('SerialId', 'int'),
                         ('WebRequestUri', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\DataProvider\\DataProvider.cs',
  [{'class_dependencies': {'EventHandler',
                           'IDataProviderHelper',
                           'IResourceManager',
                           'LoadAssetCallbacks',
                           'LoadBinaryCallbacks',
                           'ReadDataDependencyAssetEventArgs',
                           'ReadDataFailureEventArgs',
                           'ReadDataSuccessEventArgs',
                           'ReadDataUpdateEventArgs'},
    'class_fields': [('BlockSize', 'int'),
                     ('s_CachedBytes', 'byte'),
                     ('m_Owner', 'T'),
                     ('m_LoadAssetCallbacks', 'LoadAssetCallbacks'),
                     ('m_LoadBinaryCallbacks', 'LoadBinaryCallbacks'),
                     ('m_ResourceManager', 'IResourceManager'),
                     ('m_DataProviderHelper', 'IDataProviderHelper<T>'),
                     ('m_ReadDataSuccessEventHandler',
                      'EventHandler<ReadDataSuccessEventArgs>'),
                     ('m_ReadDataFailureEventHandler',
                      'EventHandler<ReadDataFailureEventArgs>'),
                     ('m_ReadDataUpdateEventHandler',
                      'EventHandler<ReadDataUpdateEventArgs>'),
                     ('m_ReadDataDependencyAssetEventHandler',
                      'EventHandler<ReadDataDependencyAssetEventArgs>')],
    'class_method_calls': [('Utility.Text', 'Format')],
    'class_methods': {'EnsureCachedBytesSize',
                      'FreeCachedBytes',
                      'ParseData',
                      'ReadData'},
    'class_name': 'DataProvider',
    'class_parent': [],
    'class_properties': [('CachedBytesSize', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\DataProvider\\DataProviderCreator.cs',
  [{'class_dependencies': {'IDataProvider<T>'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create',
                      'EnsureCachedBytesSize',
                      'FreeCachedBytes',
                      'GetCachedBytesSize'},
    'class_name': 'DataProviderCreator',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\DataProvider\\ReadDataDependencyAssetEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ReadDataDependencyAssetEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ReadDataDependencyAssetEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('DataAssetName', 'string'),
                         ('DependencyAssetName', 'string'),
                         ('LoadedCount', 'int'),
                         ('TotalCount', 'int'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\DataProvider\\ReadDataFailureEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ReadDataFailureEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ReadDataFailureEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('DataAssetName', 'string'),
                         ('ErrorMessage', 'string'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\DataProvider\\ReadDataSuccessEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs',
                           'ReadDataSuccessEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ReadDataSuccessEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('DataAssetName', 'string'),
                         ('Duration', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\DataProvider\\ReadDataUpdateEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs', 'ReadDataUpdateEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'ReadDataUpdateEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('DataAssetName', 'string'),
                         ('Progress', 'float'),
                         ('UserData', 'object')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\EventPool\\BaseEventArgs.cs',
  [{'class_dependencies': {'GameFrameworkEventArgs'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'BaseEventArgs',
    'class_parent': ['GameFrameworkEventArgs'],
    'class_properties': [('Id', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\EventPool\\EventPool.cs',
  [{'class_dependencies': {'EventHandler',
                           'EventPoolMode',
                           'GameFrameworkMultiDictionary'},
    'class_fields': [('m_EventHandlers',
                      'GameFrameworkMultiDictionary<int, EventHandler<T>>'),
                     ('m_Events', 'Queue<Event>'),
                     ('m_CachedNodes',
                      'Dictionary<object, LinkedListNode<EventHandler<T>>>'),
                     ('m_TempNodes',
                      'Dictionary<object, LinkedListNode<EventHandler<T>>>'),
                     ('m_EventPoolMode', 'EventPoolMode'),
                     ('m_DefaultHandler', 'EventHandler<T>')],
    'class_method_calls': [('Utility.Text', 'Format'), ('Event', 'Create')],
    'class_methods': {'Check',
                      'Clear',
                      'Count',
                      'Fire',
                      'FireNow',
                      'SetDefaultHandler',
                      'Shutdown',
                      'Subscribe',
                      'Unsubscribe',
                      'Update'},
    'class_name': 'EventPool',
    'class_parent': [],
    'class_properties': [('EventHandlerCount', 'int'),
                         ('EventCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\EventPool\\EventPool.Event.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'EventPool',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'IReference'},
    'class_fields': [('m_Sender', 'object'), ('m_EventArgs', 'T')],
    'class_method_calls': [],
    'class_methods': {'Create', 'Clear'},
    'class_name': 'Event',
    'class_parent': ['IReference'],
    'class_properties': [('Sender', 'object'), ('EventArgs', 'T')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\Log\\GameFrameworkLog.cs',
  [{'class_dependencies': {'ILogHelper'},
    'class_fields': [('s_LogHelper', 'ILogHelper')],
    'class_method_calls': [],
    'class_methods': {'Debug',
                      'Error',
                      'Fatal',
                      'Info',
                      'SetLogHelper',
                      'Warning'},
    'class_name': 'GameFrameworkLog',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\Log\\GameFrameworkLog.ILogHelper.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'GameFrameworkLog',
    'class_parent': [],
    'class_properties': []}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\ReferencePool\\ReferencePool.cs',
  [{'class_dependencies': {'IReference',
                           'ReferenceCollection',
                           'ReferencePoolInfo[]'},
    'class_fields': [('s_ReferenceCollections',
                      'Dictionary<Type, ReferenceCollection>'),
                     ('m_EnableStrictCheck', 'bool')],
    'class_method_calls': [],
    'class_methods': {'Acquire',
                      'Add',
                      'ClearAll',
                      'GetAllReferencePoolInfos',
                      'Release',
                      'Remove',
                      'RemoveAll'},
    'class_name': 'ReferencePool',
    'class_parent': [],
    'class_properties': [('EnableStrictCheck', 'bool'), ('Count', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\ReferencePool\\ReferencePool.ReferenceCollection.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'ReferencePool',
    'class_parent': [],
    'class_properties': []},
   {'class_dependencies': {'IReference'},
    'class_fields': [('m_References', 'Queue<IReference>'),
                     ('m_ReferenceType', 'Type'),
                     ('m_UsingReferenceCount', 'int'),
                     ('m_AcquireReferenceCount', 'int'),
                     ('m_ReleaseReferenceCount', 'int'),
                     ('m_AddReferenceCount', 'int'),
                     ('m_RemoveReferenceCount', 'int')],
    'class_method_calls': [('Activator', 'CreateInstance')],
    'class_methods': {'Release', 'RemoveAll', 'Add', 'Acquire', 'Remove'},
    'class_name': 'ReferenceCollection',
    'class_parent': [],
    'class_properties': [('ReferenceType', 'Type'),
                         ('UnusedReferenceCount', 'int'),
                         ('UsingReferenceCount', 'int'),
                         ('AcquireReferenceCount', 'int'),
                         ('ReleaseReferenceCount', 'int'),
                         ('AddReferenceCount', 'int'),
                         ('RemoveReferenceCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\TaskPool\\TaskBase.cs',
  [{'class_dependencies': {'IReference'},
    'class_fields': [('DefaultPriority', 'int'),
                     ('m_SerialId', 'int'),
                     ('m_Tag', 'string'),
                     ('m_Priority', 'int'),
                     ('m_UserData', 'object'),
                     ('m_Done', 'bool')],
    'class_method_calls': [],
    'class_methods': {'Clear'},
    'class_name': 'TaskBase',
    'class_parent': ['IReference'],
    'class_properties': [('SerialId', 'int'),
                         ('Tag', 'string'),
                         ('Priority', 'int'),
                         ('UserData', 'object'),
                         ('Done', 'bool'),
                         ('Description', 'string')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\TaskPool\\TaskPool.cs',
  [{'class_dependencies': {'TaskInfo[]', 'GameFrameworkLinkedList', 'TaskInfo'},
    'class_fields': [('m_FreeAgents', 'Stack<ITaskAgent<T>>'),
                     ('m_WorkingAgents',
                      'GameFrameworkLinkedList<ITaskAgent<T>>'),
                     ('m_WaitingTasks', 'GameFrameworkLinkedList<T>'),
                     ('m_Paused', 'bool')],
    'class_method_calls': [],
    'class_methods': {'AddAgent',
                      'AddTask',
                      'GetAllTaskInfos',
                      'GetTaskInfo',
                      'GetTaskInfos',
                      'RemoveAllTasks',
                      'RemoveTask',
                      'RemoveTasks',
                      'Shutdown',
                      'Update'},
    'class_name': 'TaskPool',
    'class_parent': [],
    'class_properties': [('Paused', 'bool'),
                         ('TotalAgentCount', 'int'),
                         ('FreeAgentCount', 'int'),
                         ('WorkingAgentCount', 'int'),
                         ('WaitingTaskCount', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\Variable\\GenericVariable.cs',
  [{'class_dependencies': set(),
    'class_fields': [('m_Value', 'T')],
    'class_method_calls': [],
    'class_methods': {'ToString', 'GetValue', 'SetValue', 'Clear'},
    'class_name': 'Variable',
    'class_parent': ['Variable'],
    'class_properties': [('Type', 'Type'), ('Value', 'T')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\Variable\\Variable.cs',
  [{'class_dependencies': {'IReference'},
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': {'GetValue', 'SetValue', 'Clear'},
    'class_name': 'Variable',
    'class_parent': ['IReference'],
    'class_properties': [('Type', 'Type')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\Version\\Version.cs',
  [{'class_dependencies': {'IVersionHelper'},
    'class_fields': [('GameFrameworkVersionString', 'string'),
                     ('s_VersionHelper', 'IVersionHelper')],
    'class_method_calls': [],
    'class_methods': {'SetVersionHelper'},
    'class_name': 'Version',
    'class_parent': [],
    'class_properties': [('GameFrameworkVersion', 'string'),
                         ('GameVersion', 'string'),
                         ('InternalGameVersion', 'int')]}]),
 ('G:\\AI\\GameFramework-master\\GameFramework\\Base\\Version\\Version.IVersionHelper.cs',
  [{'class_dependencies': set(),
    'class_fields': [],
    'class_method_calls': [],
    'class_methods': set(),
    'class_name': 'Version',
    'class_parent': [],
    'class_properties': []}])]